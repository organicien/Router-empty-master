{"ast":null,"code":"/**\n * @license\n * Copyright 2017 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\nimport { __assign, __extends } from \"tslib\";\nimport { getCorrectPropertyName } from '@material/animation/util';\nimport { MDCFoundation } from '@material/base/foundation';\nimport { cssClasses, strings } from './constants';\n\nvar MDCLinearProgressFoundation =\n/** @class */\nfunction (_super) {\n  __extends(MDCLinearProgressFoundation, _super);\n\n  function MDCLinearProgressFoundation(adapter) {\n    return _super.call(this, __assign(__assign({}, MDCLinearProgressFoundation.defaultAdapter), adapter)) || this;\n  }\n\n  Object.defineProperty(MDCLinearProgressFoundation, \"cssClasses\", {\n    get: function () {\n      return cssClasses;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(MDCLinearProgressFoundation, \"strings\", {\n    get: function () {\n      return strings;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(MDCLinearProgressFoundation, \"defaultAdapter\", {\n    get: function () {\n      return {\n        addClass: function () {\n          return undefined;\n        },\n        forceLayout: function () {\n          return undefined;\n        },\n        setBufferBarStyle: function () {\n          return null;\n        },\n        setPrimaryBarStyle: function () {\n          return null;\n        },\n        hasClass: function () {\n          return false;\n        },\n        removeAttribute: function () {\n          return undefined;\n        },\n        removeClass: function () {\n          return undefined;\n        },\n        setAttribute: function () {\n          return undefined;\n        }\n      };\n    },\n    enumerable: true,\n    configurable: true\n  });\n\n  MDCLinearProgressFoundation.prototype.init = function () {\n    this.isDeterminate = !this.adapter.hasClass(cssClasses.INDETERMINATE_CLASS);\n    this.isReversed = this.adapter.hasClass(cssClasses.REVERSED_CLASS);\n    this.progress = 0;\n    this.buffer = 1;\n  };\n\n  MDCLinearProgressFoundation.prototype.setDeterminate = function (isDeterminate) {\n    this.isDeterminate = isDeterminate;\n\n    if (this.isDeterminate) {\n      this.adapter.removeClass(cssClasses.INDETERMINATE_CLASS);\n      this.adapter.setAttribute(strings.ARIA_VALUENOW, this.progress.toString());\n      this.setPrimaryBarProgress(this.progress);\n      this.setBufferBarProgress(this.buffer);\n      return;\n    }\n\n    if (this.isReversed) {\n      // Adding/removing REVERSED_CLASS starts a translate animation, while\n      // adding INDETERMINATE_CLASS starts a scale animation. Here, we reset\n      // the translate animation in order to keep it in sync with the new\n      // scale animation that will start from adding INDETERMINATE_CLASS\n      // below.\n      this.adapter.removeClass(cssClasses.REVERSED_CLASS);\n      this.adapter.forceLayout();\n      this.adapter.addClass(cssClasses.REVERSED_CLASS);\n    }\n\n    this.adapter.addClass(cssClasses.INDETERMINATE_CLASS);\n    this.adapter.removeAttribute(strings.ARIA_VALUENOW);\n    this.setPrimaryBarProgress(1);\n    this.setBufferBarProgress(1);\n  };\n\n  MDCLinearProgressFoundation.prototype.getDeterminate = function () {\n    return this.isDeterminate;\n  };\n\n  MDCLinearProgressFoundation.prototype.setProgress = function (value) {\n    this.progress = value;\n\n    if (this.isDeterminate) {\n      this.setPrimaryBarProgress(value);\n      this.adapter.setAttribute(strings.ARIA_VALUENOW, value.toString());\n    }\n  };\n\n  MDCLinearProgressFoundation.prototype.getProgress = function () {\n    return this.progress;\n  };\n\n  MDCLinearProgressFoundation.prototype.setBuffer = function (value) {\n    this.buffer = value;\n\n    if (this.isDeterminate) {\n      this.setBufferBarProgress(value);\n    }\n  };\n\n  MDCLinearProgressFoundation.prototype.setReverse = function (isReversed) {\n    this.isReversed = isReversed;\n\n    if (!this.isDeterminate) {\n      // Adding INDETERMINATE_CLASS starts a scale animation, while\n      // adding/removing REVERSED_CLASS starts a translate animation. Here, we\n      // reset the scale animation in order to keep it in sync with the new\n      // translate animation that will start from adding/removing REVERSED_CLASS\n      // below.\n      this.adapter.removeClass(cssClasses.INDETERMINATE_CLASS);\n      this.adapter.forceLayout();\n      this.adapter.addClass(cssClasses.INDETERMINATE_CLASS);\n    }\n\n    if (this.isReversed) {\n      this.adapter.addClass(cssClasses.REVERSED_CLASS);\n      return;\n    }\n\n    this.adapter.removeClass(cssClasses.REVERSED_CLASS);\n  };\n\n  MDCLinearProgressFoundation.prototype.open = function () {\n    this.adapter.removeClass(cssClasses.CLOSED_CLASS);\n  };\n\n  MDCLinearProgressFoundation.prototype.close = function () {\n    this.adapter.addClass(cssClasses.CLOSED_CLASS);\n  };\n\n  MDCLinearProgressFoundation.prototype.setPrimaryBarProgress = function (progressValue) {\n    var value = \"scaleX(\" + progressValue + \")\"; // Accessing `window` without a `typeof` check will throw on Node environments.\n\n    var transformProp = typeof window !== 'undefined' ? getCorrectPropertyName(window, 'transform') : 'transform';\n    this.adapter.setPrimaryBarStyle(transformProp, value);\n  };\n\n  MDCLinearProgressFoundation.prototype.setBufferBarProgress = function (progressValue) {\n    var value = progressValue * 100 + \"%\";\n    this.adapter.setBufferBarStyle(strings.FLEX_BASIS, value);\n  };\n\n  return MDCLinearProgressFoundation;\n}(MDCFoundation);\n\nexport { MDCLinearProgressFoundation }; // tslint:disable-next-line:no-default-export Needed for backward compatibility with MDC Web v0.44.0 and earlier.\n\nexport default MDCLinearProgressFoundation;","map":{"version":3,"sources":["foundation.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["/**\n * @license\n * Copyright 2017 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\nimport { __assign, __extends } from \"tslib\";\nimport { getCorrectPropertyName } from '@material/animation/util';\nimport { MDCFoundation } from '@material/base/foundation';\nimport { cssClasses, strings } from './constants';\nvar MDCLinearProgressFoundation = /** @class */ (function (_super) {\n    __extends(MDCLinearProgressFoundation, _super);\n    function MDCLinearProgressFoundation(adapter) {\n        return _super.call(this, __assign(__assign({}, MDCLinearProgressFoundation.defaultAdapter), adapter)) || this;\n    }\n    Object.defineProperty(MDCLinearProgressFoundation, \"cssClasses\", {\n        get: function () {\n            return cssClasses;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MDCLinearProgressFoundation, \"strings\", {\n        get: function () {\n            return strings;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MDCLinearProgressFoundation, \"defaultAdapter\", {\n        get: function () {\n            return {\n                addClass: function () { return undefined; },\n                forceLayout: function () { return undefined; },\n                setBufferBarStyle: function () { return null; },\n                setPrimaryBarStyle: function () { return null; },\n                hasClass: function () { return false; },\n                removeAttribute: function () { return undefined; },\n                removeClass: function () { return undefined; },\n                setAttribute: function () { return undefined; },\n            };\n        },\n        enumerable: true,\n        configurable: true\n    });\n    MDCLinearProgressFoundation.prototype.init = function () {\n        this.isDeterminate = !this.adapter.hasClass(cssClasses.INDETERMINATE_CLASS);\n        this.isReversed = this.adapter.hasClass(cssClasses.REVERSED_CLASS);\n        this.progress = 0;\n        this.buffer = 1;\n    };\n    MDCLinearProgressFoundation.prototype.setDeterminate = function (isDeterminate) {\n        this.isDeterminate = isDeterminate;\n        if (this.isDeterminate) {\n            this.adapter.removeClass(cssClasses.INDETERMINATE_CLASS);\n            this.adapter.setAttribute(strings.ARIA_VALUENOW, this.progress.toString());\n            this.setPrimaryBarProgress(this.progress);\n            this.setBufferBarProgress(this.buffer);\n            return;\n        }\n        if (this.isReversed) {\n            // Adding/removing REVERSED_CLASS starts a translate animation, while\n            // adding INDETERMINATE_CLASS starts a scale animation. Here, we reset\n            // the translate animation in order to keep it in sync with the new\n            // scale animation that will start from adding INDETERMINATE_CLASS\n            // below.\n            this.adapter.removeClass(cssClasses.REVERSED_CLASS);\n            this.adapter.forceLayout();\n            this.adapter.addClass(cssClasses.REVERSED_CLASS);\n        }\n        this.adapter.addClass(cssClasses.INDETERMINATE_CLASS);\n        this.adapter.removeAttribute(strings.ARIA_VALUENOW);\n        this.setPrimaryBarProgress(1);\n        this.setBufferBarProgress(1);\n    };\n    MDCLinearProgressFoundation.prototype.getDeterminate = function () {\n        return this.isDeterminate;\n    };\n    MDCLinearProgressFoundation.prototype.setProgress = function (value) {\n        this.progress = value;\n        if (this.isDeterminate) {\n            this.setPrimaryBarProgress(value);\n            this.adapter.setAttribute(strings.ARIA_VALUENOW, value.toString());\n        }\n    };\n    MDCLinearProgressFoundation.prototype.getProgress = function () {\n        return this.progress;\n    };\n    MDCLinearProgressFoundation.prototype.setBuffer = function (value) {\n        this.buffer = value;\n        if (this.isDeterminate) {\n            this.setBufferBarProgress(value);\n        }\n    };\n    MDCLinearProgressFoundation.prototype.setReverse = function (isReversed) {\n        this.isReversed = isReversed;\n        if (!this.isDeterminate) {\n            // Adding INDETERMINATE_CLASS starts a scale animation, while\n            // adding/removing REVERSED_CLASS starts a translate animation. Here, we\n            // reset the scale animation in order to keep it in sync with the new\n            // translate animation that will start from adding/removing REVERSED_CLASS\n            // below.\n            this.adapter.removeClass(cssClasses.INDETERMINATE_CLASS);\n            this.adapter.forceLayout();\n            this.adapter.addClass(cssClasses.INDETERMINATE_CLASS);\n        }\n        if (this.isReversed) {\n            this.adapter.addClass(cssClasses.REVERSED_CLASS);\n            return;\n        }\n        this.adapter.removeClass(cssClasses.REVERSED_CLASS);\n    };\n    MDCLinearProgressFoundation.prototype.open = function () {\n        this.adapter.removeClass(cssClasses.CLOSED_CLASS);\n    };\n    MDCLinearProgressFoundation.prototype.close = function () {\n        this.adapter.addClass(cssClasses.CLOSED_CLASS);\n    };\n    MDCLinearProgressFoundation.prototype.setPrimaryBarProgress = function (progressValue) {\n        var value = \"scaleX(\" + progressValue + \")\";\n        // Accessing `window` without a `typeof` check will throw on Node environments.\n        var transformProp = typeof window !== 'undefined' ?\n            getCorrectPropertyName(window, 'transform') : 'transform';\n        this.adapter.setPrimaryBarStyle(transformProp, value);\n    };\n    MDCLinearProgressFoundation.prototype.setBufferBarProgress = function (progressValue) {\n        var value = progressValue * 100 + \"%\";\n        this.adapter.setBufferBarStyle(strings.FLEX_BASIS, value);\n    };\n    return MDCLinearProgressFoundation;\n}(MDCFoundation));\nexport { MDCLinearProgressFoundation };\n// tslint:disable-next-line:no-default-export Needed for backward compatibility with MDC Web v0.44.0 and earlier.\nexport default MDCLinearProgressFoundation;\n//# sourceMappingURL=foundation.js.map"]},"metadata":{},"sourceType":"module"}