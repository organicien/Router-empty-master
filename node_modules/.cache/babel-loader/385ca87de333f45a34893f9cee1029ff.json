{"ast":null,"code":"/**\n * @license\n * Copyright 2016 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\nimport { __assign, __extends } from \"tslib\";\nimport { MDCFoundation } from '@material/base/foundation';\nimport { cssClasses, Direction, EventSource, jumpChipKeys, navigationKeys, strings } from './constants';\nvar emptyClientRect = {\n  bottom: 0,\n  height: 0,\n  left: 0,\n  right: 0,\n  top: 0,\n  width: 0\n};\nvar FocusBehavior;\n\n(function (FocusBehavior) {\n  FocusBehavior[FocusBehavior[\"SHOULD_FOCUS\"] = 0] = \"SHOULD_FOCUS\";\n  FocusBehavior[FocusBehavior[\"SHOULD_NOT_FOCUS\"] = 1] = \"SHOULD_NOT_FOCUS\";\n})(FocusBehavior || (FocusBehavior = {}));\n\nvar MDCChipFoundation =\n/** @class */\nfunction (_super) {\n  __extends(MDCChipFoundation, _super);\n\n  function MDCChipFoundation(adapter) {\n    var _this = _super.call(this, __assign(__assign({}, MDCChipFoundation.defaultAdapter), adapter)) || this;\n    /** Whether a trailing icon click should immediately trigger exit/removal of the chip. */\n\n\n    _this.shouldRemoveOnTrailingIconClick_ = true;\n    /**\n     * Whether the primary action should receive focus on click. Should only be\n     * set to true for clients who programmatically give focus to a different\n     * element on the page when a chip is clicked (like a menu).\n     */\n\n    _this.shouldFocusPrimaryActionOnClick_ = true;\n    return _this;\n  }\n\n  Object.defineProperty(MDCChipFoundation, \"strings\", {\n    get: function () {\n      return strings;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(MDCChipFoundation, \"cssClasses\", {\n    get: function () {\n      return cssClasses;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(MDCChipFoundation, \"defaultAdapter\", {\n    get: function () {\n      return {\n        addClass: function () {\n          return undefined;\n        },\n        addClassToLeadingIcon: function () {\n          return undefined;\n        },\n        eventTargetHasClass: function () {\n          return false;\n        },\n        focusPrimaryAction: function () {\n          return undefined;\n        },\n        focusTrailingAction: function () {\n          return undefined;\n        },\n        getAttribute: function () {\n          return null;\n        },\n        getCheckmarkBoundingClientRect: function () {\n          return emptyClientRect;\n        },\n        getComputedStyleValue: function () {\n          return '';\n        },\n        getRootBoundingClientRect: function () {\n          return emptyClientRect;\n        },\n        hasClass: function () {\n          return false;\n        },\n        hasLeadingIcon: function () {\n          return false;\n        },\n        isRTL: function () {\n          return false;\n        },\n        isTrailingActionNavigable: function () {\n          return false;\n        },\n        notifyEditFinish: function () {\n          return undefined;\n        },\n        notifyEditStart: function () {\n          return undefined;\n        },\n        notifyInteraction: function () {\n          return undefined;\n        },\n        notifyNavigation: function () {\n          return undefined;\n        },\n        notifyRemoval: function () {\n          return undefined;\n        },\n        notifySelection: function () {\n          return undefined;\n        },\n        notifyTrailingIconInteraction: function () {\n          return undefined;\n        },\n        removeClass: function () {\n          return undefined;\n        },\n        removeClassFromLeadingIcon: function () {\n          return undefined;\n        },\n        removeTrailingActionFocus: function () {\n          return undefined;\n        },\n        setPrimaryActionAttr: function () {\n          return undefined;\n        },\n        setStyleProperty: function () {\n          return undefined;\n        }\n      };\n    },\n    enumerable: true,\n    configurable: true\n  });\n\n  MDCChipFoundation.prototype.isSelected = function () {\n    return this.adapter.hasClass(cssClasses.SELECTED);\n  };\n\n  MDCChipFoundation.prototype.isEditable = function () {\n    return this.adapter.hasClass(cssClasses.EDITABLE);\n  };\n\n  MDCChipFoundation.prototype.isEditing = function () {\n    return this.adapter.hasClass(cssClasses.EDITING);\n  };\n\n  MDCChipFoundation.prototype.setSelected = function (selected) {\n    this.setSelected_(selected);\n    this.notifySelection_(selected);\n  };\n\n  MDCChipFoundation.prototype.setSelectedFromChipSet = function (selected, shouldNotifyClients) {\n    this.setSelected_(selected);\n\n    if (shouldNotifyClients) {\n      this.notifyIgnoredSelection_(selected);\n    }\n  };\n\n  MDCChipFoundation.prototype.getShouldRemoveOnTrailingIconClick = function () {\n    return this.shouldRemoveOnTrailingIconClick_;\n  };\n\n  MDCChipFoundation.prototype.setShouldRemoveOnTrailingIconClick = function (shouldRemove) {\n    this.shouldRemoveOnTrailingIconClick_ = shouldRemove;\n  };\n\n  MDCChipFoundation.prototype.setShouldFocusPrimaryActionOnClick = function (shouldFocus) {\n    this.shouldFocusPrimaryActionOnClick_ = shouldFocus;\n  };\n\n  MDCChipFoundation.prototype.getDimensions = function () {\n    var _this = this;\n\n    var getRootRect = function () {\n      return _this.adapter.getRootBoundingClientRect();\n    };\n\n    var getCheckmarkRect = function () {\n      return _this.adapter.getCheckmarkBoundingClientRect();\n    }; // When a chip has a checkmark and not a leading icon, the bounding rect changes in size depending on the current\n    // size of the checkmark.\n\n\n    if (!this.adapter.hasLeadingIcon()) {\n      var checkmarkRect = getCheckmarkRect();\n\n      if (checkmarkRect) {\n        var rootRect = getRootRect(); // Checkmark is a square, meaning the client rect's width and height are identical once the animation completes.\n        // However, the checkbox is initially hidden by setting the width to 0.\n        // To account for an initial width of 0, we use the checkbox's height instead (which equals the end-state width)\n        // when adding it to the root client rect's width.\n\n        return {\n          bottom: rootRect.bottom,\n          height: rootRect.height,\n          left: rootRect.left,\n          right: rootRect.right,\n          top: rootRect.top,\n          width: rootRect.width + checkmarkRect.height\n        };\n      }\n    }\n\n    return getRootRect();\n  };\n  /**\n   * Begins the exit animation which leads to removal of the chip.\n   */\n\n\n  MDCChipFoundation.prototype.beginExit = function () {\n    this.adapter.addClass(cssClasses.CHIP_EXIT);\n  };\n\n  MDCChipFoundation.prototype.handleClick = function () {\n    this.adapter.notifyInteraction();\n    this.setPrimaryActionFocusable_(this.getFocusBehavior_());\n  };\n\n  MDCChipFoundation.prototype.handleDoubleClick = function () {\n    if (this.isEditable()) {\n      this.startEditing();\n    }\n  };\n  /**\n   * Handles a transition end event on the root element.\n   */\n\n\n  MDCChipFoundation.prototype.handleTransitionEnd = function (evt) {\n    var _this = this; // Handle transition end event on the chip when it is about to be removed.\n\n\n    var shouldHandle = this.adapter.eventTargetHasClass(evt.target, cssClasses.CHIP_EXIT);\n    var widthIsAnimating = evt.propertyName === 'width';\n    var opacityIsAnimating = evt.propertyName === 'opacity';\n\n    if (shouldHandle && opacityIsAnimating) {\n      // See: https://css-tricks.com/using-css-transitions-auto-dimensions/#article-header-id-5\n      var chipWidth_1 = this.adapter.getComputedStyleValue('width'); // On the next frame (once we get the computed width), explicitly set the chip's width\n      // to its current pixel width, so we aren't transitioning out of 'auto'.\n\n      requestAnimationFrame(function () {\n        _this.adapter.setStyleProperty('width', chipWidth_1); // To mitigate jitter, start transitioning padding and margin before width.\n\n\n        _this.adapter.setStyleProperty('padding', '0');\n\n        _this.adapter.setStyleProperty('margin', '0'); // On the next frame (once width is explicitly set), transition width to 0.\n\n\n        requestAnimationFrame(function () {\n          _this.adapter.setStyleProperty('width', '0');\n        });\n      });\n      return;\n    }\n\n    if (shouldHandle && widthIsAnimating) {\n      this.removeFocus();\n      var removedAnnouncement = this.adapter.getAttribute(strings.REMOVED_ANNOUNCEMENT_ATTRIBUTE);\n      this.adapter.notifyRemoval(removedAnnouncement);\n    } // Handle a transition end event on the leading icon or checkmark, since the transition end event bubbles.\n\n\n    if (!opacityIsAnimating) {\n      return;\n    }\n\n    var shouldHideLeadingIcon = this.adapter.eventTargetHasClass(evt.target, cssClasses.LEADING_ICON) && this.adapter.hasClass(cssClasses.SELECTED);\n    var shouldShowLeadingIcon = this.adapter.eventTargetHasClass(evt.target, cssClasses.CHECKMARK) && !this.adapter.hasClass(cssClasses.SELECTED);\n\n    if (shouldHideLeadingIcon) {\n      this.adapter.addClassToLeadingIcon(cssClasses.HIDDEN_LEADING_ICON);\n      return;\n    }\n\n    if (shouldShowLeadingIcon) {\n      this.adapter.removeClassFromLeadingIcon(cssClasses.HIDDEN_LEADING_ICON);\n      return;\n    }\n  };\n\n  MDCChipFoundation.prototype.handleFocusIn = function (evt) {\n    // Early exit if the event doesn't come from the primary action\n    if (!this.eventFromPrimaryAction_(evt)) {\n      return;\n    }\n\n    this.adapter.addClass(cssClasses.PRIMARY_ACTION_FOCUSED);\n  };\n\n  MDCChipFoundation.prototype.handleFocusOut = function (evt) {\n    // Early exit if the event doesn't come from the primary action\n    if (!this.eventFromPrimaryAction_(evt)) {\n      return;\n    }\n\n    if (this.isEditing()) {\n      this.finishEditing();\n    }\n\n    this.adapter.removeClass(cssClasses.PRIMARY_ACTION_FOCUSED);\n  };\n  /**\n   * Handles an interaction event on the trailing icon element. This is used to\n   * prevent the ripple from activating on interaction with the trailing icon.\n   */\n\n\n  MDCChipFoundation.prototype.handleTrailingActionInteraction = function () {\n    this.adapter.notifyTrailingIconInteraction();\n    this.removeChip_();\n  };\n  /**\n   * Handles a keydown event from the root element.\n   */\n\n\n  MDCChipFoundation.prototype.handleKeydown = function (evt) {\n    if (this.isEditing()) {\n      if (this.shouldFinishEditing(evt)) {\n        evt.preventDefault();\n        this.finishEditing();\n      } // When editing, the foundation should only handle key events that finish\n      // the editing process.\n\n\n      return;\n    }\n\n    if (this.isEditable()) {\n      if (this.shouldStartEditing(evt)) {\n        evt.preventDefault();\n        this.startEditing();\n      }\n    }\n\n    if (this.shouldNotifyInteraction_(evt)) {\n      this.adapter.notifyInteraction();\n      this.setPrimaryActionFocusable_(this.getFocusBehavior_());\n      return;\n    }\n\n    if (this.isDeleteAction_(evt)) {\n      evt.preventDefault();\n      this.removeChip_();\n      return;\n    } // Early exit if the key is not usable\n\n\n    if (!navigationKeys.has(evt.key)) {\n      return;\n    } // Prevent default behavior for movement keys which could include scrolling\n\n\n    evt.preventDefault();\n    this.focusNextAction_(evt.key, EventSource.PRIMARY);\n  };\n\n  MDCChipFoundation.prototype.handleTrailingActionNavigation = function (evt) {\n    return this.focusNextAction_(evt.detail.key, EventSource.TRAILING);\n  };\n  /**\n   * Called by the chip set to remove focus from the chip actions.\n   */\n\n\n  MDCChipFoundation.prototype.removeFocus = function () {\n    this.adapter.setPrimaryActionAttr(strings.TAB_INDEX, '-1');\n    this.adapter.removeTrailingActionFocus();\n  };\n  /**\n   * Called by the chip set to focus the primary action.\n   *\n   */\n\n\n  MDCChipFoundation.prototype.focusPrimaryAction = function () {\n    this.setPrimaryActionFocusable_(FocusBehavior.SHOULD_FOCUS);\n  };\n  /**\n   * Called by the chip set to focus the trailing action (if present), otherwise\n   * gives focus to the trailing action.\n   */\n\n\n  MDCChipFoundation.prototype.focusTrailingAction = function () {\n    var trailingActionIsNavigable = this.adapter.isTrailingActionNavigable();\n\n    if (trailingActionIsNavigable) {\n      this.adapter.setPrimaryActionAttr(strings.TAB_INDEX, '-1');\n      this.adapter.focusTrailingAction();\n      return;\n    }\n\n    this.focusPrimaryAction();\n  };\n\n  MDCChipFoundation.prototype.setPrimaryActionFocusable_ = function (focusBehavior) {\n    this.adapter.setPrimaryActionAttr(strings.TAB_INDEX, '0');\n\n    if (focusBehavior === FocusBehavior.SHOULD_FOCUS) {\n      this.adapter.focusPrimaryAction();\n    }\n\n    this.adapter.removeTrailingActionFocus();\n  };\n\n  MDCChipFoundation.prototype.getFocusBehavior_ = function () {\n    if (this.shouldFocusPrimaryActionOnClick_) {\n      return FocusBehavior.SHOULD_FOCUS;\n    }\n\n    return FocusBehavior.SHOULD_NOT_FOCUS;\n  };\n\n  MDCChipFoundation.prototype.focusNextAction_ = function (key, source) {\n    var isTrailingActionNavigable = this.adapter.isTrailingActionNavigable();\n    var dir = this.getDirection_(key); // Early exit if the key should jump chips\n\n    if (jumpChipKeys.has(key) || !isTrailingActionNavigable) {\n      return this.adapter.notifyNavigation(key, source);\n    }\n\n    if (source === EventSource.PRIMARY && dir === Direction.RIGHT) {\n      return this.focusTrailingAction();\n    }\n\n    if (source === EventSource.TRAILING && dir === Direction.LEFT) {\n      return this.focusPrimaryAction();\n    }\n\n    this.adapter.notifyNavigation(key, EventSource.NONE);\n  };\n\n  MDCChipFoundation.prototype.getDirection_ = function (key) {\n    var isRTL = this.adapter.isRTL();\n    var isLeftKey = key === strings.ARROW_LEFT_KEY || key === strings.IE_ARROW_LEFT_KEY;\n    var isRightKey = key === strings.ARROW_RIGHT_KEY || key === strings.IE_ARROW_RIGHT_KEY;\n\n    if (!isRTL && isLeftKey || isRTL && isRightKey) {\n      return Direction.LEFT;\n    }\n\n    return Direction.RIGHT;\n  };\n\n  MDCChipFoundation.prototype.removeChip_ = function () {\n    if (this.shouldRemoveOnTrailingIconClick_) {\n      this.beginExit();\n    }\n  };\n\n  MDCChipFoundation.prototype.shouldStartEditing = function (evt) {\n    return this.eventFromPrimaryAction_(evt) && evt.key === strings.ENTER_KEY;\n  };\n\n  MDCChipFoundation.prototype.shouldFinishEditing = function (evt) {\n    return evt.key === strings.ENTER_KEY;\n  };\n\n  MDCChipFoundation.prototype.shouldNotifyInteraction_ = function (evt) {\n    return evt.key === strings.ENTER_KEY || evt.key === strings.SPACEBAR_KEY;\n  };\n\n  MDCChipFoundation.prototype.isDeleteAction_ = function (evt) {\n    var isDeletable = this.adapter.hasClass(cssClasses.DELETABLE);\n    return isDeletable && (evt.key === strings.BACKSPACE_KEY || evt.key === strings.DELETE_KEY || evt.key === strings.IE_DELETE_KEY);\n  };\n\n  MDCChipFoundation.prototype.setSelected_ = function (selected) {\n    if (selected) {\n      this.adapter.addClass(cssClasses.SELECTED);\n      this.adapter.setPrimaryActionAttr(strings.ARIA_CHECKED, 'true');\n    } else {\n      this.adapter.removeClass(cssClasses.SELECTED);\n      this.adapter.setPrimaryActionAttr(strings.ARIA_CHECKED, 'false');\n    }\n  };\n\n  MDCChipFoundation.prototype.notifySelection_ = function (selected) {\n    this.adapter.notifySelection(selected, false);\n  };\n\n  MDCChipFoundation.prototype.notifyIgnoredSelection_ = function (selected) {\n    this.adapter.notifySelection(selected, true);\n  };\n\n  MDCChipFoundation.prototype.eventFromPrimaryAction_ = function (evt) {\n    return this.adapter.eventTargetHasClass(evt.target, cssClasses.PRIMARY_ACTION);\n  };\n\n  MDCChipFoundation.prototype.startEditing = function () {\n    this.adapter.addClass(cssClasses.EDITING);\n    this.adapter.notifyEditStart();\n  };\n\n  MDCChipFoundation.prototype.finishEditing = function () {\n    this.adapter.removeClass(cssClasses.EDITING);\n    this.adapter.notifyEditFinish();\n  };\n\n  return MDCChipFoundation;\n}(MDCFoundation);\n\nexport { MDCChipFoundation }; // tslint:disable-next-line:no-default-export Needed for backward compatibility with MDC Web v0.44.0 and earlier.\n\nexport default MDCChipFoundation;","map":{"version":3,"sources":["foundation.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["/**\n * @license\n * Copyright 2016 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\nimport { __assign, __extends } from \"tslib\";\nimport { MDCFoundation } from '@material/base/foundation';\nimport { cssClasses, Direction, EventSource, jumpChipKeys, navigationKeys, strings } from './constants';\nvar emptyClientRect = {\n    bottom: 0,\n    height: 0,\n    left: 0,\n    right: 0,\n    top: 0,\n    width: 0,\n};\nvar FocusBehavior;\n(function (FocusBehavior) {\n    FocusBehavior[FocusBehavior[\"SHOULD_FOCUS\"] = 0] = \"SHOULD_FOCUS\";\n    FocusBehavior[FocusBehavior[\"SHOULD_NOT_FOCUS\"] = 1] = \"SHOULD_NOT_FOCUS\";\n})(FocusBehavior || (FocusBehavior = {}));\nvar MDCChipFoundation = /** @class */ (function (_super) {\n    __extends(MDCChipFoundation, _super);\n    function MDCChipFoundation(adapter) {\n        var _this = _super.call(this, __assign(__assign({}, MDCChipFoundation.defaultAdapter), adapter)) || this;\n        /** Whether a trailing icon click should immediately trigger exit/removal of the chip. */\n        _this.shouldRemoveOnTrailingIconClick_ = true;\n        /**\n         * Whether the primary action should receive focus on click. Should only be\n         * set to true for clients who programmatically give focus to a different\n         * element on the page when a chip is clicked (like a menu).\n         */\n        _this.shouldFocusPrimaryActionOnClick_ = true;\n        return _this;\n    }\n    Object.defineProperty(MDCChipFoundation, \"strings\", {\n        get: function () {\n            return strings;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MDCChipFoundation, \"cssClasses\", {\n        get: function () {\n            return cssClasses;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MDCChipFoundation, \"defaultAdapter\", {\n        get: function () {\n            return {\n                addClass: function () { return undefined; },\n                addClassToLeadingIcon: function () { return undefined; },\n                eventTargetHasClass: function () { return false; },\n                focusPrimaryAction: function () { return undefined; },\n                focusTrailingAction: function () { return undefined; },\n                getAttribute: function () { return null; },\n                getCheckmarkBoundingClientRect: function () { return emptyClientRect; },\n                getComputedStyleValue: function () { return ''; },\n                getRootBoundingClientRect: function () { return emptyClientRect; },\n                hasClass: function () { return false; },\n                hasLeadingIcon: function () { return false; },\n                isRTL: function () { return false; },\n                isTrailingActionNavigable: function () { return false; },\n                notifyEditFinish: function () { return undefined; },\n                notifyEditStart: function () { return undefined; },\n                notifyInteraction: function () { return undefined; },\n                notifyNavigation: function () { return undefined; },\n                notifyRemoval: function () { return undefined; },\n                notifySelection: function () { return undefined; },\n                notifyTrailingIconInteraction: function () { return undefined; },\n                removeClass: function () { return undefined; },\n                removeClassFromLeadingIcon: function () { return undefined; },\n                removeTrailingActionFocus: function () { return undefined; },\n                setPrimaryActionAttr: function () { return undefined; },\n                setStyleProperty: function () { return undefined; },\n            };\n        },\n        enumerable: true,\n        configurable: true\n    });\n    MDCChipFoundation.prototype.isSelected = function () {\n        return this.adapter.hasClass(cssClasses.SELECTED);\n    };\n    MDCChipFoundation.prototype.isEditable = function () {\n        return this.adapter.hasClass(cssClasses.EDITABLE);\n    };\n    MDCChipFoundation.prototype.isEditing = function () {\n        return this.adapter.hasClass(cssClasses.EDITING);\n    };\n    MDCChipFoundation.prototype.setSelected = function (selected) {\n        this.setSelected_(selected);\n        this.notifySelection_(selected);\n    };\n    MDCChipFoundation.prototype.setSelectedFromChipSet = function (selected, shouldNotifyClients) {\n        this.setSelected_(selected);\n        if (shouldNotifyClients) {\n            this.notifyIgnoredSelection_(selected);\n        }\n    };\n    MDCChipFoundation.prototype.getShouldRemoveOnTrailingIconClick = function () {\n        return this.shouldRemoveOnTrailingIconClick_;\n    };\n    MDCChipFoundation.prototype.setShouldRemoveOnTrailingIconClick = function (shouldRemove) {\n        this.shouldRemoveOnTrailingIconClick_ = shouldRemove;\n    };\n    MDCChipFoundation.prototype.setShouldFocusPrimaryActionOnClick = function (shouldFocus) {\n        this.shouldFocusPrimaryActionOnClick_ = shouldFocus;\n    };\n    MDCChipFoundation.prototype.getDimensions = function () {\n        var _this = this;\n        var getRootRect = function () { return _this.adapter.getRootBoundingClientRect(); };\n        var getCheckmarkRect = function () {\n            return _this.adapter.getCheckmarkBoundingClientRect();\n        };\n        // When a chip has a checkmark and not a leading icon, the bounding rect changes in size depending on the current\n        // size of the checkmark.\n        if (!this.adapter.hasLeadingIcon()) {\n            var checkmarkRect = getCheckmarkRect();\n            if (checkmarkRect) {\n                var rootRect = getRootRect();\n                // Checkmark is a square, meaning the client rect's width and height are identical once the animation completes.\n                // However, the checkbox is initially hidden by setting the width to 0.\n                // To account for an initial width of 0, we use the checkbox's height instead (which equals the end-state width)\n                // when adding it to the root client rect's width.\n                return {\n                    bottom: rootRect.bottom,\n                    height: rootRect.height,\n                    left: rootRect.left,\n                    right: rootRect.right,\n                    top: rootRect.top,\n                    width: rootRect.width + checkmarkRect.height,\n                };\n            }\n        }\n        return getRootRect();\n    };\n    /**\n     * Begins the exit animation which leads to removal of the chip.\n     */\n    MDCChipFoundation.prototype.beginExit = function () {\n        this.adapter.addClass(cssClasses.CHIP_EXIT);\n    };\n    MDCChipFoundation.prototype.handleClick = function () {\n        this.adapter.notifyInteraction();\n        this.setPrimaryActionFocusable_(this.getFocusBehavior_());\n    };\n    MDCChipFoundation.prototype.handleDoubleClick = function () {\n        if (this.isEditable()) {\n            this.startEditing();\n        }\n    };\n    /**\n     * Handles a transition end event on the root element.\n     */\n    MDCChipFoundation.prototype.handleTransitionEnd = function (evt) {\n        var _this = this;\n        // Handle transition end event on the chip when it is about to be removed.\n        var shouldHandle = this.adapter.eventTargetHasClass(evt.target, cssClasses.CHIP_EXIT);\n        var widthIsAnimating = evt.propertyName === 'width';\n        var opacityIsAnimating = evt.propertyName === 'opacity';\n        if (shouldHandle && opacityIsAnimating) {\n            // See: https://css-tricks.com/using-css-transitions-auto-dimensions/#article-header-id-5\n            var chipWidth_1 = this.adapter.getComputedStyleValue('width');\n            // On the next frame (once we get the computed width), explicitly set the chip's width\n            // to its current pixel width, so we aren't transitioning out of 'auto'.\n            requestAnimationFrame(function () {\n                _this.adapter.setStyleProperty('width', chipWidth_1);\n                // To mitigate jitter, start transitioning padding and margin before width.\n                _this.adapter.setStyleProperty('padding', '0');\n                _this.adapter.setStyleProperty('margin', '0');\n                // On the next frame (once width is explicitly set), transition width to 0.\n                requestAnimationFrame(function () {\n                    _this.adapter.setStyleProperty('width', '0');\n                });\n            });\n            return;\n        }\n        if (shouldHandle && widthIsAnimating) {\n            this.removeFocus();\n            var removedAnnouncement = this.adapter.getAttribute(strings.REMOVED_ANNOUNCEMENT_ATTRIBUTE);\n            this.adapter.notifyRemoval(removedAnnouncement);\n        }\n        // Handle a transition end event on the leading icon or checkmark, since the transition end event bubbles.\n        if (!opacityIsAnimating) {\n            return;\n        }\n        var shouldHideLeadingIcon = this.adapter.eventTargetHasClass(evt.target, cssClasses.LEADING_ICON) &&\n            this.adapter.hasClass(cssClasses.SELECTED);\n        var shouldShowLeadingIcon = this.adapter.eventTargetHasClass(evt.target, cssClasses.CHECKMARK) &&\n            !this.adapter.hasClass(cssClasses.SELECTED);\n        if (shouldHideLeadingIcon) {\n            this.adapter.addClassToLeadingIcon(cssClasses.HIDDEN_LEADING_ICON);\n            return;\n        }\n        if (shouldShowLeadingIcon) {\n            this.adapter.removeClassFromLeadingIcon(cssClasses.HIDDEN_LEADING_ICON);\n            return;\n        }\n    };\n    MDCChipFoundation.prototype.handleFocusIn = function (evt) {\n        // Early exit if the event doesn't come from the primary action\n        if (!this.eventFromPrimaryAction_(evt)) {\n            return;\n        }\n        this.adapter.addClass(cssClasses.PRIMARY_ACTION_FOCUSED);\n    };\n    MDCChipFoundation.prototype.handleFocusOut = function (evt) {\n        // Early exit if the event doesn't come from the primary action\n        if (!this.eventFromPrimaryAction_(evt)) {\n            return;\n        }\n        if (this.isEditing()) {\n            this.finishEditing();\n        }\n        this.adapter.removeClass(cssClasses.PRIMARY_ACTION_FOCUSED);\n    };\n    /**\n     * Handles an interaction event on the trailing icon element. This is used to\n     * prevent the ripple from activating on interaction with the trailing icon.\n     */\n    MDCChipFoundation.prototype.handleTrailingActionInteraction = function () {\n        this.adapter.notifyTrailingIconInteraction();\n        this.removeChip_();\n    };\n    /**\n     * Handles a keydown event from the root element.\n     */\n    MDCChipFoundation.prototype.handleKeydown = function (evt) {\n        if (this.isEditing()) {\n            if (this.shouldFinishEditing(evt)) {\n                evt.preventDefault();\n                this.finishEditing();\n            }\n            // When editing, the foundation should only handle key events that finish\n            // the editing process.\n            return;\n        }\n        if (this.isEditable()) {\n            if (this.shouldStartEditing(evt)) {\n                evt.preventDefault();\n                this.startEditing();\n            }\n        }\n        if (this.shouldNotifyInteraction_(evt)) {\n            this.adapter.notifyInteraction();\n            this.setPrimaryActionFocusable_(this.getFocusBehavior_());\n            return;\n        }\n        if (this.isDeleteAction_(evt)) {\n            evt.preventDefault();\n            this.removeChip_();\n            return;\n        }\n        // Early exit if the key is not usable\n        if (!navigationKeys.has(evt.key)) {\n            return;\n        }\n        // Prevent default behavior for movement keys which could include scrolling\n        evt.preventDefault();\n        this.focusNextAction_(evt.key, EventSource.PRIMARY);\n    };\n    MDCChipFoundation.prototype.handleTrailingActionNavigation = function (evt) {\n        return this.focusNextAction_(evt.detail.key, EventSource.TRAILING);\n    };\n    /**\n     * Called by the chip set to remove focus from the chip actions.\n     */\n    MDCChipFoundation.prototype.removeFocus = function () {\n        this.adapter.setPrimaryActionAttr(strings.TAB_INDEX, '-1');\n        this.adapter.removeTrailingActionFocus();\n    };\n    /**\n     * Called by the chip set to focus the primary action.\n     *\n     */\n    MDCChipFoundation.prototype.focusPrimaryAction = function () {\n        this.setPrimaryActionFocusable_(FocusBehavior.SHOULD_FOCUS);\n    };\n    /**\n     * Called by the chip set to focus the trailing action (if present), otherwise\n     * gives focus to the trailing action.\n     */\n    MDCChipFoundation.prototype.focusTrailingAction = function () {\n        var trailingActionIsNavigable = this.adapter.isTrailingActionNavigable();\n        if (trailingActionIsNavigable) {\n            this.adapter.setPrimaryActionAttr(strings.TAB_INDEX, '-1');\n            this.adapter.focusTrailingAction();\n            return;\n        }\n        this.focusPrimaryAction();\n    };\n    MDCChipFoundation.prototype.setPrimaryActionFocusable_ = function (focusBehavior) {\n        this.adapter.setPrimaryActionAttr(strings.TAB_INDEX, '0');\n        if (focusBehavior === FocusBehavior.SHOULD_FOCUS) {\n            this.adapter.focusPrimaryAction();\n        }\n        this.adapter.removeTrailingActionFocus();\n    };\n    MDCChipFoundation.prototype.getFocusBehavior_ = function () {\n        if (this.shouldFocusPrimaryActionOnClick_) {\n            return FocusBehavior.SHOULD_FOCUS;\n        }\n        return FocusBehavior.SHOULD_NOT_FOCUS;\n    };\n    MDCChipFoundation.prototype.focusNextAction_ = function (key, source) {\n        var isTrailingActionNavigable = this.adapter.isTrailingActionNavigable();\n        var dir = this.getDirection_(key);\n        // Early exit if the key should jump chips\n        if (jumpChipKeys.has(key) || !isTrailingActionNavigable) {\n            return this.adapter.notifyNavigation(key, source);\n        }\n        if (source === EventSource.PRIMARY && dir === Direction.RIGHT) {\n            return this.focusTrailingAction();\n        }\n        if (source === EventSource.TRAILING && dir === Direction.LEFT) {\n            return this.focusPrimaryAction();\n        }\n        this.adapter.notifyNavigation(key, EventSource.NONE);\n    };\n    MDCChipFoundation.prototype.getDirection_ = function (key) {\n        var isRTL = this.adapter.isRTL();\n        var isLeftKey = key === strings.ARROW_LEFT_KEY || key === strings.IE_ARROW_LEFT_KEY;\n        var isRightKey = key === strings.ARROW_RIGHT_KEY || key === strings.IE_ARROW_RIGHT_KEY;\n        if (!isRTL && isLeftKey || isRTL && isRightKey) {\n            return Direction.LEFT;\n        }\n        return Direction.RIGHT;\n    };\n    MDCChipFoundation.prototype.removeChip_ = function () {\n        if (this.shouldRemoveOnTrailingIconClick_) {\n            this.beginExit();\n        }\n    };\n    MDCChipFoundation.prototype.shouldStartEditing = function (evt) {\n        return this.eventFromPrimaryAction_(evt) && evt.key === strings.ENTER_KEY;\n    };\n    MDCChipFoundation.prototype.shouldFinishEditing = function (evt) {\n        return evt.key === strings.ENTER_KEY;\n    };\n    MDCChipFoundation.prototype.shouldNotifyInteraction_ = function (evt) {\n        return evt.key === strings.ENTER_KEY || evt.key === strings.SPACEBAR_KEY;\n    };\n    MDCChipFoundation.prototype.isDeleteAction_ = function (evt) {\n        var isDeletable = this.adapter.hasClass(cssClasses.DELETABLE);\n        return isDeletable &&\n            (evt.key === strings.BACKSPACE_KEY || evt.key === strings.DELETE_KEY ||\n                evt.key === strings.IE_DELETE_KEY);\n    };\n    MDCChipFoundation.prototype.setSelected_ = function (selected) {\n        if (selected) {\n            this.adapter.addClass(cssClasses.SELECTED);\n            this.adapter.setPrimaryActionAttr(strings.ARIA_CHECKED, 'true');\n        }\n        else {\n            this.adapter.removeClass(cssClasses.SELECTED);\n            this.adapter.setPrimaryActionAttr(strings.ARIA_CHECKED, 'false');\n        }\n    };\n    MDCChipFoundation.prototype.notifySelection_ = function (selected) {\n        this.adapter.notifySelection(selected, false);\n    };\n    MDCChipFoundation.prototype.notifyIgnoredSelection_ = function (selected) {\n        this.adapter.notifySelection(selected, true);\n    };\n    MDCChipFoundation.prototype.eventFromPrimaryAction_ = function (evt) {\n        return this.adapter.eventTargetHasClass(evt.target, cssClasses.PRIMARY_ACTION);\n    };\n    MDCChipFoundation.prototype.startEditing = function () {\n        this.adapter.addClass(cssClasses.EDITING);\n        this.adapter.notifyEditStart();\n    };\n    MDCChipFoundation.prototype.finishEditing = function () {\n        this.adapter.removeClass(cssClasses.EDITING);\n        this.adapter.notifyEditFinish();\n    };\n    return MDCChipFoundation;\n}(MDCFoundation));\nexport { MDCChipFoundation };\n// tslint:disable-next-line:no-default-export Needed for backward compatibility with MDC Web v0.44.0 and earlier.\nexport default MDCChipFoundation;\n//# sourceMappingURL=foundation.js.map"]},"metadata":{},"sourceType":"module"}