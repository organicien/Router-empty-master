{"ast":null,"code":"/**\n * @license\n * Copyright 2017 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\nimport { __assign, __extends } from \"tslib\";\nimport { MDCFoundation } from '@material/base/foundation';\nimport { cssClasses, numbers, strings } from './constants';\n\nvar MDCDialogFoundation =\n/** @class */\nfunction (_super) {\n  __extends(MDCDialogFoundation, _super);\n\n  function MDCDialogFoundation(adapter) {\n    var _this = _super.call(this, __assign(__assign({}, MDCDialogFoundation.defaultAdapter), adapter)) || this;\n\n    _this.isOpen_ = false;\n    _this.animationFrame_ = 0;\n    _this.animationTimer_ = 0;\n    _this.layoutFrame_ = 0;\n    _this.escapeKeyAction_ = strings.CLOSE_ACTION;\n    _this.scrimClickAction_ = strings.CLOSE_ACTION;\n    _this.autoStackButtons_ = true;\n    _this.areButtonsStacked_ = false;\n    return _this;\n  }\n\n  Object.defineProperty(MDCDialogFoundation, \"cssClasses\", {\n    get: function () {\n      return cssClasses;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(MDCDialogFoundation, \"strings\", {\n    get: function () {\n      return strings;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(MDCDialogFoundation, \"numbers\", {\n    get: function () {\n      return numbers;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(MDCDialogFoundation, \"defaultAdapter\", {\n    get: function () {\n      return {\n        addBodyClass: function () {\n          return undefined;\n        },\n        addClass: function () {\n          return undefined;\n        },\n        areButtonsStacked: function () {\n          return false;\n        },\n        clickDefaultButton: function () {\n          return undefined;\n        },\n        eventTargetMatches: function () {\n          return false;\n        },\n        getActionFromEvent: function () {\n          return '';\n        },\n        getInitialFocusEl: function () {\n          return null;\n        },\n        hasClass: function () {\n          return false;\n        },\n        isContentScrollable: function () {\n          return false;\n        },\n        notifyClosed: function () {\n          return undefined;\n        },\n        notifyClosing: function () {\n          return undefined;\n        },\n        notifyOpened: function () {\n          return undefined;\n        },\n        notifyOpening: function () {\n          return undefined;\n        },\n        releaseFocus: function () {\n          return undefined;\n        },\n        removeBodyClass: function () {\n          return undefined;\n        },\n        removeClass: function () {\n          return undefined;\n        },\n        reverseButtons: function () {\n          return undefined;\n        },\n        trapFocus: function () {\n          return undefined;\n        }\n      };\n    },\n    enumerable: true,\n    configurable: true\n  });\n\n  MDCDialogFoundation.prototype.init = function () {\n    if (this.adapter.hasClass(cssClasses.STACKED)) {\n      this.setAutoStackButtons(false);\n    }\n  };\n\n  MDCDialogFoundation.prototype.destroy = function () {\n    if (this.isOpen_) {\n      this.close(strings.DESTROY_ACTION);\n    }\n\n    if (this.animationTimer_) {\n      clearTimeout(this.animationTimer_);\n      this.handleAnimationTimerEnd_();\n    }\n\n    if (this.layoutFrame_) {\n      cancelAnimationFrame(this.layoutFrame_);\n      this.layoutFrame_ = 0;\n    }\n  };\n\n  MDCDialogFoundation.prototype.open = function () {\n    var _this = this;\n\n    this.isOpen_ = true;\n    this.adapter.notifyOpening();\n    this.adapter.addClass(cssClasses.OPENING); // Wait a frame once display is no longer \"none\", to establish basis for animation\n\n    this.runNextAnimationFrame_(function () {\n      _this.adapter.addClass(cssClasses.OPEN);\n\n      _this.adapter.addBodyClass(cssClasses.SCROLL_LOCK);\n\n      _this.layout();\n\n      _this.animationTimer_ = setTimeout(function () {\n        _this.handleAnimationTimerEnd_();\n\n        _this.adapter.trapFocus(_this.adapter.getInitialFocusEl());\n\n        _this.adapter.notifyOpened();\n      }, numbers.DIALOG_ANIMATION_OPEN_TIME_MS);\n    });\n  };\n\n  MDCDialogFoundation.prototype.close = function (action) {\n    var _this = this;\n\n    if (action === void 0) {\n      action = '';\n    }\n\n    if (!this.isOpen_) {\n      // Avoid redundant close calls (and events), e.g. from keydown on elements that inherently emit click\n      return;\n    }\n\n    this.isOpen_ = false;\n    this.adapter.notifyClosing(action);\n    this.adapter.addClass(cssClasses.CLOSING);\n    this.adapter.removeClass(cssClasses.OPEN);\n    this.adapter.removeBodyClass(cssClasses.SCROLL_LOCK);\n    cancelAnimationFrame(this.animationFrame_);\n    this.animationFrame_ = 0;\n    clearTimeout(this.animationTimer_);\n    this.animationTimer_ = setTimeout(function () {\n      _this.adapter.releaseFocus();\n\n      _this.handleAnimationTimerEnd_();\n\n      _this.adapter.notifyClosed(action);\n    }, numbers.DIALOG_ANIMATION_CLOSE_TIME_MS);\n  };\n\n  MDCDialogFoundation.prototype.isOpen = function () {\n    return this.isOpen_;\n  };\n\n  MDCDialogFoundation.prototype.getEscapeKeyAction = function () {\n    return this.escapeKeyAction_;\n  };\n\n  MDCDialogFoundation.prototype.setEscapeKeyAction = function (action) {\n    this.escapeKeyAction_ = action;\n  };\n\n  MDCDialogFoundation.prototype.getScrimClickAction = function () {\n    return this.scrimClickAction_;\n  };\n\n  MDCDialogFoundation.prototype.setScrimClickAction = function (action) {\n    this.scrimClickAction_ = action;\n  };\n\n  MDCDialogFoundation.prototype.getAutoStackButtons = function () {\n    return this.autoStackButtons_;\n  };\n\n  MDCDialogFoundation.prototype.setAutoStackButtons = function (autoStack) {\n    this.autoStackButtons_ = autoStack;\n  };\n\n  MDCDialogFoundation.prototype.layout = function () {\n    var _this = this;\n\n    if (this.layoutFrame_) {\n      cancelAnimationFrame(this.layoutFrame_);\n    }\n\n    this.layoutFrame_ = requestAnimationFrame(function () {\n      _this.layoutInternal_();\n\n      _this.layoutFrame_ = 0;\n    });\n  };\n  /** Handles click on the dialog root element. */\n\n\n  MDCDialogFoundation.prototype.handleClick = function (evt) {\n    var isScrim = this.adapter.eventTargetMatches(evt.target, strings.SCRIM_SELECTOR); // Check for scrim click first since it doesn't require querying ancestors.\n\n    if (isScrim && this.scrimClickAction_ !== '') {\n      this.close(this.scrimClickAction_);\n    } else {\n      var action = this.adapter.getActionFromEvent(evt);\n\n      if (action) {\n        this.close(action);\n      }\n    }\n  };\n  /** Handles keydown on the dialog root element. */\n\n\n  MDCDialogFoundation.prototype.handleKeydown = function (evt) {\n    var isEnter = evt.key === 'Enter' || evt.keyCode === 13;\n\n    if (!isEnter) {\n      return;\n    }\n\n    var action = this.adapter.getActionFromEvent(evt);\n\n    if (action) {\n      // Action button callback is handled in `handleClick`,\n      // since space/enter keydowns on buttons trigger click events.\n      return;\n    }\n\n    var isDefault = !this.adapter.eventTargetMatches(evt.target, strings.SUPPRESS_DEFAULT_PRESS_SELECTOR);\n\n    if (isEnter && isDefault) {\n      this.adapter.clickDefaultButton();\n    }\n  };\n  /** Handles keydown on the document. */\n\n\n  MDCDialogFoundation.prototype.handleDocumentKeydown = function (evt) {\n    var isEscape = evt.key === 'Escape' || evt.keyCode === 27;\n\n    if (isEscape && this.escapeKeyAction_ !== '') {\n      this.close(this.escapeKeyAction_);\n    }\n  };\n\n  MDCDialogFoundation.prototype.layoutInternal_ = function () {\n    if (this.autoStackButtons_) {\n      this.detectStackedButtons_();\n    }\n\n    this.detectScrollableContent_();\n  };\n\n  MDCDialogFoundation.prototype.handleAnimationTimerEnd_ = function () {\n    this.animationTimer_ = 0;\n    this.adapter.removeClass(cssClasses.OPENING);\n    this.adapter.removeClass(cssClasses.CLOSING);\n  };\n  /**\n   * Runs the given logic on the next animation frame, using setTimeout to factor in Firefox reflow behavior.\n   */\n\n\n  MDCDialogFoundation.prototype.runNextAnimationFrame_ = function (callback) {\n    var _this = this;\n\n    cancelAnimationFrame(this.animationFrame_);\n    this.animationFrame_ = requestAnimationFrame(function () {\n      _this.animationFrame_ = 0;\n      clearTimeout(_this.animationTimer_);\n      _this.animationTimer_ = setTimeout(callback, 0);\n    });\n  };\n\n  MDCDialogFoundation.prototype.detectStackedButtons_ = function () {\n    // Remove the class first to let us measure the buttons' natural positions.\n    this.adapter.removeClass(cssClasses.STACKED);\n    var areButtonsStacked = this.adapter.areButtonsStacked();\n\n    if (areButtonsStacked) {\n      this.adapter.addClass(cssClasses.STACKED);\n    }\n\n    if (areButtonsStacked !== this.areButtonsStacked_) {\n      this.adapter.reverseButtons();\n      this.areButtonsStacked_ = areButtonsStacked;\n    }\n  };\n\n  MDCDialogFoundation.prototype.detectScrollableContent_ = function () {\n    // Remove the class first to let us measure the natural height of the content.\n    this.adapter.removeClass(cssClasses.SCROLLABLE);\n\n    if (this.adapter.isContentScrollable()) {\n      this.adapter.addClass(cssClasses.SCROLLABLE);\n    }\n  };\n\n  return MDCDialogFoundation;\n}(MDCFoundation);\n\nexport { MDCDialogFoundation }; // tslint:disable-next-line:no-default-export Needed for backward compatibility with MDC Web v0.44.0 and earlier.\n\nexport default MDCDialogFoundation;","map":{"version":3,"sources":["foundation.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["/**\n * @license\n * Copyright 2017 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\nimport { __assign, __extends } from \"tslib\";\nimport { MDCFoundation } from '@material/base/foundation';\nimport { cssClasses, numbers, strings } from './constants';\nvar MDCDialogFoundation = /** @class */ (function (_super) {\n    __extends(MDCDialogFoundation, _super);\n    function MDCDialogFoundation(adapter) {\n        var _this = _super.call(this, __assign(__assign({}, MDCDialogFoundation.defaultAdapter), adapter)) || this;\n        _this.isOpen_ = false;\n        _this.animationFrame_ = 0;\n        _this.animationTimer_ = 0;\n        _this.layoutFrame_ = 0;\n        _this.escapeKeyAction_ = strings.CLOSE_ACTION;\n        _this.scrimClickAction_ = strings.CLOSE_ACTION;\n        _this.autoStackButtons_ = true;\n        _this.areButtonsStacked_ = false;\n        return _this;\n    }\n    Object.defineProperty(MDCDialogFoundation, \"cssClasses\", {\n        get: function () {\n            return cssClasses;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MDCDialogFoundation, \"strings\", {\n        get: function () {\n            return strings;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MDCDialogFoundation, \"numbers\", {\n        get: function () {\n            return numbers;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MDCDialogFoundation, \"defaultAdapter\", {\n        get: function () {\n            return {\n                addBodyClass: function () { return undefined; },\n                addClass: function () { return undefined; },\n                areButtonsStacked: function () { return false; },\n                clickDefaultButton: function () { return undefined; },\n                eventTargetMatches: function () { return false; },\n                getActionFromEvent: function () { return ''; },\n                getInitialFocusEl: function () { return null; },\n                hasClass: function () { return false; },\n                isContentScrollable: function () { return false; },\n                notifyClosed: function () { return undefined; },\n                notifyClosing: function () { return undefined; },\n                notifyOpened: function () { return undefined; },\n                notifyOpening: function () { return undefined; },\n                releaseFocus: function () { return undefined; },\n                removeBodyClass: function () { return undefined; },\n                removeClass: function () { return undefined; },\n                reverseButtons: function () { return undefined; },\n                trapFocus: function () { return undefined; },\n            };\n        },\n        enumerable: true,\n        configurable: true\n    });\n    MDCDialogFoundation.prototype.init = function () {\n        if (this.adapter.hasClass(cssClasses.STACKED)) {\n            this.setAutoStackButtons(false);\n        }\n    };\n    MDCDialogFoundation.prototype.destroy = function () {\n        if (this.isOpen_) {\n            this.close(strings.DESTROY_ACTION);\n        }\n        if (this.animationTimer_) {\n            clearTimeout(this.animationTimer_);\n            this.handleAnimationTimerEnd_();\n        }\n        if (this.layoutFrame_) {\n            cancelAnimationFrame(this.layoutFrame_);\n            this.layoutFrame_ = 0;\n        }\n    };\n    MDCDialogFoundation.prototype.open = function () {\n        var _this = this;\n        this.isOpen_ = true;\n        this.adapter.notifyOpening();\n        this.adapter.addClass(cssClasses.OPENING);\n        // Wait a frame once display is no longer \"none\", to establish basis for animation\n        this.runNextAnimationFrame_(function () {\n            _this.adapter.addClass(cssClasses.OPEN);\n            _this.adapter.addBodyClass(cssClasses.SCROLL_LOCK);\n            _this.layout();\n            _this.animationTimer_ = setTimeout(function () {\n                _this.handleAnimationTimerEnd_();\n                _this.adapter.trapFocus(_this.adapter.getInitialFocusEl());\n                _this.adapter.notifyOpened();\n            }, numbers.DIALOG_ANIMATION_OPEN_TIME_MS);\n        });\n    };\n    MDCDialogFoundation.prototype.close = function (action) {\n        var _this = this;\n        if (action === void 0) { action = ''; }\n        if (!this.isOpen_) {\n            // Avoid redundant close calls (and events), e.g. from keydown on elements that inherently emit click\n            return;\n        }\n        this.isOpen_ = false;\n        this.adapter.notifyClosing(action);\n        this.adapter.addClass(cssClasses.CLOSING);\n        this.adapter.removeClass(cssClasses.OPEN);\n        this.adapter.removeBodyClass(cssClasses.SCROLL_LOCK);\n        cancelAnimationFrame(this.animationFrame_);\n        this.animationFrame_ = 0;\n        clearTimeout(this.animationTimer_);\n        this.animationTimer_ = setTimeout(function () {\n            _this.adapter.releaseFocus();\n            _this.handleAnimationTimerEnd_();\n            _this.adapter.notifyClosed(action);\n        }, numbers.DIALOG_ANIMATION_CLOSE_TIME_MS);\n    };\n    MDCDialogFoundation.prototype.isOpen = function () {\n        return this.isOpen_;\n    };\n    MDCDialogFoundation.prototype.getEscapeKeyAction = function () {\n        return this.escapeKeyAction_;\n    };\n    MDCDialogFoundation.prototype.setEscapeKeyAction = function (action) {\n        this.escapeKeyAction_ = action;\n    };\n    MDCDialogFoundation.prototype.getScrimClickAction = function () {\n        return this.scrimClickAction_;\n    };\n    MDCDialogFoundation.prototype.setScrimClickAction = function (action) {\n        this.scrimClickAction_ = action;\n    };\n    MDCDialogFoundation.prototype.getAutoStackButtons = function () {\n        return this.autoStackButtons_;\n    };\n    MDCDialogFoundation.prototype.setAutoStackButtons = function (autoStack) {\n        this.autoStackButtons_ = autoStack;\n    };\n    MDCDialogFoundation.prototype.layout = function () {\n        var _this = this;\n        if (this.layoutFrame_) {\n            cancelAnimationFrame(this.layoutFrame_);\n        }\n        this.layoutFrame_ = requestAnimationFrame(function () {\n            _this.layoutInternal_();\n            _this.layoutFrame_ = 0;\n        });\n    };\n    /** Handles click on the dialog root element. */\n    MDCDialogFoundation.prototype.handleClick = function (evt) {\n        var isScrim = this.adapter.eventTargetMatches(evt.target, strings.SCRIM_SELECTOR);\n        // Check for scrim click first since it doesn't require querying ancestors.\n        if (isScrim && this.scrimClickAction_ !== '') {\n            this.close(this.scrimClickAction_);\n        }\n        else {\n            var action = this.adapter.getActionFromEvent(evt);\n            if (action) {\n                this.close(action);\n            }\n        }\n    };\n    /** Handles keydown on the dialog root element. */\n    MDCDialogFoundation.prototype.handleKeydown = function (evt) {\n        var isEnter = evt.key === 'Enter' || evt.keyCode === 13;\n        if (!isEnter) {\n            return;\n        }\n        var action = this.adapter.getActionFromEvent(evt);\n        if (action) {\n            // Action button callback is handled in `handleClick`,\n            // since space/enter keydowns on buttons trigger click events.\n            return;\n        }\n        var isDefault = !this.adapter.eventTargetMatches(evt.target, strings.SUPPRESS_DEFAULT_PRESS_SELECTOR);\n        if (isEnter && isDefault) {\n            this.adapter.clickDefaultButton();\n        }\n    };\n    /** Handles keydown on the document. */\n    MDCDialogFoundation.prototype.handleDocumentKeydown = function (evt) {\n        var isEscape = evt.key === 'Escape' || evt.keyCode === 27;\n        if (isEscape && this.escapeKeyAction_ !== '') {\n            this.close(this.escapeKeyAction_);\n        }\n    };\n    MDCDialogFoundation.prototype.layoutInternal_ = function () {\n        if (this.autoStackButtons_) {\n            this.detectStackedButtons_();\n        }\n        this.detectScrollableContent_();\n    };\n    MDCDialogFoundation.prototype.handleAnimationTimerEnd_ = function () {\n        this.animationTimer_ = 0;\n        this.adapter.removeClass(cssClasses.OPENING);\n        this.adapter.removeClass(cssClasses.CLOSING);\n    };\n    /**\n     * Runs the given logic on the next animation frame, using setTimeout to factor in Firefox reflow behavior.\n     */\n    MDCDialogFoundation.prototype.runNextAnimationFrame_ = function (callback) {\n        var _this = this;\n        cancelAnimationFrame(this.animationFrame_);\n        this.animationFrame_ = requestAnimationFrame(function () {\n            _this.animationFrame_ = 0;\n            clearTimeout(_this.animationTimer_);\n            _this.animationTimer_ = setTimeout(callback, 0);\n        });\n    };\n    MDCDialogFoundation.prototype.detectStackedButtons_ = function () {\n        // Remove the class first to let us measure the buttons' natural positions.\n        this.adapter.removeClass(cssClasses.STACKED);\n        var areButtonsStacked = this.adapter.areButtonsStacked();\n        if (areButtonsStacked) {\n            this.adapter.addClass(cssClasses.STACKED);\n        }\n        if (areButtonsStacked !== this.areButtonsStacked_) {\n            this.adapter.reverseButtons();\n            this.areButtonsStacked_ = areButtonsStacked;\n        }\n    };\n    MDCDialogFoundation.prototype.detectScrollableContent_ = function () {\n        // Remove the class first to let us measure the natural height of the content.\n        this.adapter.removeClass(cssClasses.SCROLLABLE);\n        if (this.adapter.isContentScrollable()) {\n            this.adapter.addClass(cssClasses.SCROLLABLE);\n        }\n    };\n    return MDCDialogFoundation;\n}(MDCFoundation));\nexport { MDCDialogFoundation };\n// tslint:disable-next-line:no-default-export Needed for backward compatibility with MDC Web v0.44.0 and earlier.\nexport default MDCDialogFoundation;\n//# sourceMappingURL=foundation.js.map"]},"metadata":{},"sourceType":"module"}