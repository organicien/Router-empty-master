{"ast":null,"code":"/**\n * @license\n * Copyright 2016 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\nimport { __assign, __extends } from \"tslib\";\nimport { MDCComponent } from '@material/base/component';\nimport { MDCFloatingLabel } from '@material/floating-label/component';\nimport { MDCLineRipple } from '@material/line-ripple/component';\nimport * as menuSurfaceConstants from '@material/menu-surface/constants';\nimport { MDCMenu } from '@material/menu/component';\nimport * as menuConstants from '@material/menu/constants';\nimport { MDCNotchedOutline } from '@material/notched-outline/component';\nimport { MDCRipple } from '@material/ripple/component';\nimport { MDCRippleFoundation } from '@material/ripple/foundation';\nimport { cssClasses, strings } from './constants';\nimport { MDCSelectFoundation } from './foundation';\nimport { MDCSelectHelperText } from './helper-text/component';\nimport { MDCSelectIcon } from './icon/component';\n\nvar MDCSelect =\n/** @class */\nfunction (_super) {\n  __extends(MDCSelect, _super);\n\n  function MDCSelect() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  MDCSelect.attachTo = function (root) {\n    return new MDCSelect(root);\n  };\n\n  MDCSelect.prototype.initialize = function (labelFactory, lineRippleFactory, outlineFactory, menuFactory, iconFactory, helperTextFactory) {\n    if (labelFactory === void 0) {\n      labelFactory = function (el) {\n        return new MDCFloatingLabel(el);\n      };\n    }\n\n    if (lineRippleFactory === void 0) {\n      lineRippleFactory = function (el) {\n        return new MDCLineRipple(el);\n      };\n    }\n\n    if (outlineFactory === void 0) {\n      outlineFactory = function (el) {\n        return new MDCNotchedOutline(el);\n      };\n    }\n\n    if (menuFactory === void 0) {\n      menuFactory = function (el) {\n        return new MDCMenu(el);\n      };\n    }\n\n    if (iconFactory === void 0) {\n      iconFactory = function (el) {\n        return new MDCSelectIcon(el);\n      };\n    }\n\n    if (helperTextFactory === void 0) {\n      helperTextFactory = function (el) {\n        return new MDCSelectHelperText(el);\n      };\n    }\n\n    this.selectAnchor = this.root.querySelector(strings.SELECT_ANCHOR_SELECTOR);\n    this.selectedText = this.root.querySelector(strings.SELECTED_TEXT_SELECTOR);\n\n    if (!this.selectedText) {\n      throw new Error('MDCSelect: Missing required element: The following selector must be present: ' + (\"'\" + strings.SELECTED_TEXT_SELECTOR + \"'\"));\n    }\n\n    if (this.selectAnchor.hasAttribute(strings.ARIA_CONTROLS)) {\n      var helperTextElement = document.getElementById(this.selectAnchor.getAttribute(strings.ARIA_CONTROLS));\n\n      if (helperTextElement) {\n        this.helperText = helperTextFactory(helperTextElement);\n      }\n    }\n\n    this.menuSetup(menuFactory);\n    var labelElement = this.root.querySelector(strings.LABEL_SELECTOR);\n    this.label = labelElement ? labelFactory(labelElement) : null;\n    var lineRippleElement = this.root.querySelector(strings.LINE_RIPPLE_SELECTOR);\n    this.lineRipple = lineRippleElement ? lineRippleFactory(lineRippleElement) : null;\n    var outlineElement = this.root.querySelector(strings.OUTLINE_SELECTOR);\n    this.outline = outlineElement ? outlineFactory(outlineElement) : null;\n    var leadingIcon = this.root.querySelector(strings.LEADING_ICON_SELECTOR);\n\n    if (leadingIcon) {\n      this.leadingIcon = iconFactory(leadingIcon);\n    }\n\n    if (!this.root.classList.contains(cssClasses.OUTLINED)) {\n      this.ripple = this.createRipple();\n    }\n  };\n  /**\n   * Initializes the select's event listeners and internal state based\n   * on the environment's state.\n   */\n\n\n  MDCSelect.prototype.initialSyncWithDOM = function () {\n    var _this = this;\n\n    this.handleChange = function () {\n      _this.foundation.handleChange();\n    };\n\n    this.handleFocus = function () {\n      _this.foundation.handleFocus();\n    };\n\n    this.handleBlur = function () {\n      _this.foundation.handleBlur();\n    };\n\n    this.handleClick = function (evt) {\n      _this.selectAnchor.focus();\n\n      _this.foundation.handleClick(_this.getNormalizedXCoordinate(evt));\n    };\n\n    this.handleKeydown = function (evt) {\n      _this.foundation.handleKeydown(evt);\n    };\n\n    this.handleMenuItemAction = function (evt) {\n      _this.foundation.handleMenuItemAction(evt.detail.index);\n    };\n\n    this.handleMenuOpened = function () {\n      _this.foundation.handleMenuOpened();\n    };\n\n    this.handleMenuClosed = function () {\n      _this.foundation.handleMenuClosed();\n    };\n\n    this.selectAnchor.addEventListener('focus', this.handleFocus);\n    this.selectAnchor.addEventListener('blur', this.handleBlur);\n    this.selectAnchor.addEventListener('click', this.handleClick);\n    this.selectAnchor.addEventListener('keydown', this.handleKeydown);\n    this.menu.listen(menuSurfaceConstants.strings.CLOSED_EVENT, this.handleMenuClosed);\n    this.menu.listen(menuSurfaceConstants.strings.OPENED_EVENT, this.handleMenuOpened);\n    this.menu.listen(menuConstants.strings.SELECTED_EVENT, this.handleMenuItemAction);\n  };\n\n  MDCSelect.prototype.destroy = function () {\n    this.selectAnchor.removeEventListener('change', this.handleChange);\n    this.selectAnchor.removeEventListener('focus', this.handleFocus);\n    this.selectAnchor.removeEventListener('blur', this.handleBlur);\n    this.selectAnchor.removeEventListener('keydown', this.handleKeydown);\n    this.selectAnchor.removeEventListener('click', this.handleClick);\n    this.menu.unlisten(menuSurfaceConstants.strings.CLOSED_EVENT, this.handleMenuClosed);\n    this.menu.unlisten(menuSurfaceConstants.strings.OPENED_EVENT, this.handleMenuOpened);\n    this.menu.unlisten(menuConstants.strings.SELECTED_EVENT, this.handleMenuItemAction);\n    this.menu.destroy();\n\n    if (this.ripple) {\n      this.ripple.destroy();\n    }\n\n    if (this.outline) {\n      this.outline.destroy();\n    }\n\n    if (this.leadingIcon) {\n      this.leadingIcon.destroy();\n    }\n\n    if (this.helperText) {\n      this.helperText.destroy();\n    }\n\n    _super.prototype.destroy.call(this);\n  };\n\n  Object.defineProperty(MDCSelect.prototype, \"value\", {\n    get: function () {\n      return this.foundation.getValue();\n    },\n    set: function (value) {\n      this.foundation.setValue(value);\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(MDCSelect.prototype, \"selectedIndex\", {\n    get: function () {\n      return this.foundation.getSelectedIndex();\n    },\n    set: function (selectedIndex) {\n      this.foundation.setSelectedIndex(selectedIndex,\n      /** closeMenu */\n      true);\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(MDCSelect.prototype, \"disabled\", {\n    get: function () {\n      return this.foundation.getDisabled();\n    },\n    set: function (disabled) {\n      this.foundation.setDisabled(disabled);\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(MDCSelect.prototype, \"leadingIconAriaLabel\", {\n    set: function (label) {\n      this.foundation.setLeadingIconAriaLabel(label);\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(MDCSelect.prototype, \"leadingIconContent\", {\n    /**\n     * Sets the text content of the leading icon.\n     */\n    set: function (content) {\n      this.foundation.setLeadingIconContent(content);\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(MDCSelect.prototype, \"helperTextContent\", {\n    /**\n     * Sets the text content of the helper text.\n     */\n    set: function (content) {\n      this.foundation.setHelperTextContent(content);\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(MDCSelect.prototype, \"useDefaultValidation\", {\n    /**\n     * Enables or disables the default validation scheme where a required select\n     * must be non-empty. Set to false for custom validation.\n     * @param useDefaultValidation Set this to false to ignore default\n     *     validation scheme.\n     */\n    set: function (useDefaultValidation) {\n      this.foundation.setUseDefaultValidation(useDefaultValidation);\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(MDCSelect.prototype, \"valid\", {\n    /**\n     * Checks if the select is in a valid state.\n     */\n    get: function () {\n      return this.foundation.isValid();\n    },\n\n    /**\n     * Sets the current invalid state of the select.\n     */\n    set: function (isValid) {\n      this.foundation.setValid(isValid);\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(MDCSelect.prototype, \"required\", {\n    /**\n     * Returns whether the select is required.\n     */\n    get: function () {\n      return this.foundation.getRequired();\n    },\n\n    /**\n     * Sets the control to the required state.\n     */\n    set: function (isRequired) {\n      this.foundation.setRequired(isRequired);\n    },\n    enumerable: true,\n    configurable: true\n  });\n  /**\n   * Re-calculates if the notched outline should be notched and if the label\n   * should float.\n   */\n\n  MDCSelect.prototype.layout = function () {\n    this.foundation.layout();\n  };\n  /**\n   * Synchronizes the list of options with the state of the foundation. Call\n   * this whenever menu options are dynamically updated.\n   */\n\n\n  MDCSelect.prototype.layoutOptions = function () {\n    this.foundation.layoutOptions();\n    this.menu.layout();\n  };\n\n  MDCSelect.prototype.getDefaultFoundation = function () {\n    // DO NOT INLINE this variable. For backward compatibility, foundations take a Partial<MDCFooAdapter>.\n    // To ensure we don't accidentally omit any methods, we need a separate, strongly typed adapter variable.\n    var adapter = __assign(__assign(__assign(__assign({}, this.getSelectAdapterMethods()), this.getCommonAdapterMethods()), this.getOutlineAdapterMethods()), this.getLabelAdapterMethods());\n\n    return new MDCSelectFoundation(adapter, this.getFoundationMap());\n  };\n  /**\n   * Handles setup for the menu.\n   */\n\n\n  MDCSelect.prototype.menuSetup = function (menuFactory) {\n    this.menuElement = this.root.querySelector(strings.MENU_SELECTOR);\n    this.menu = menuFactory(this.menuElement);\n    this.menu.hasTypeahead = true;\n  };\n\n  MDCSelect.prototype.createRipple = function () {\n    var _this = this; // DO NOT INLINE this variable. For backward compatibility, foundations take a Partial<MDCFooAdapter>.\n    // To ensure we don't accidentally omit any methods, we need a separate, strongly typed adapter variable.\n    // tslint:disable:object-literal-sort-keys Methods should be in the same order as the adapter interface.\n\n\n    var adapter = __assign(__assign({}, MDCRipple.createAdapter({\n      root: this.selectAnchor\n    })), {\n      registerInteractionHandler: function (evtType, handler) {\n        _this.selectAnchor.addEventListener(evtType, handler);\n      },\n      deregisterInteractionHandler: function (evtType, handler) {\n        _this.selectAnchor.removeEventListener(evtType, handler);\n      }\n    }); // tslint:enable:object-literal-sort-keys\n\n\n    return new MDCRipple(this.selectAnchor, new MDCRippleFoundation(adapter));\n  };\n\n  MDCSelect.prototype.getSelectAdapterMethods = function () {\n    var _this = this; // tslint:disable:object-literal-sort-keys Methods should be in the same order as the adapter interface.\n\n\n    return {\n      getSelectedMenuItem: function () {\n        return _this.menuElement.querySelector(strings.SELECTED_ITEM_SELECTOR);\n      },\n      getMenuItemAttr: function (menuItem, attr) {\n        return menuItem.getAttribute(attr);\n      },\n      setSelectedText: function (text) {\n        _this.selectedText.textContent = text;\n      },\n      isSelectAnchorFocused: function () {\n        return document.activeElement === _this.selectAnchor;\n      },\n      getSelectAnchorAttr: function (attr) {\n        return _this.selectAnchor.getAttribute(attr);\n      },\n      setSelectAnchorAttr: function (attr, value) {\n        _this.selectAnchor.setAttribute(attr, value);\n      },\n      removeSelectAnchorAttr: function (attr) {\n        _this.selectAnchor.removeAttribute(attr);\n      },\n      addMenuClass: function (className) {\n        _this.menuElement.classList.add(className);\n      },\n      removeMenuClass: function (className) {\n        _this.menuElement.classList.remove(className);\n      },\n      openMenu: function () {\n        _this.menu.open = true;\n      },\n      closeMenu: function () {\n        _this.menu.open = false;\n      },\n      getAnchorElement: function () {\n        return _this.root.querySelector(strings.SELECT_ANCHOR_SELECTOR);\n      },\n      setMenuAnchorElement: function (anchorEl) {\n        _this.menu.setAnchorElement(anchorEl);\n      },\n      setMenuAnchorCorner: function (anchorCorner) {\n        _this.menu.setAnchorCorner(anchorCorner);\n      },\n      setMenuWrapFocus: function (wrapFocus) {\n        _this.menu.wrapFocus = wrapFocus;\n      },\n      setAttributeAtIndex: function (index, attributeName, attributeValue) {\n        _this.menu.items[index].setAttribute(attributeName, attributeValue);\n      },\n      removeAttributeAtIndex: function (index, attributeName) {\n        _this.menu.items[index].removeAttribute(attributeName);\n      },\n      focusMenuItemAtIndex: function (index) {\n        _this.menu.items[index].focus();\n      },\n      getMenuItemCount: function () {\n        return _this.menu.items.length;\n      },\n      getMenuItemValues: function () {\n        return _this.menu.items.map(function (el) {\n          return el.getAttribute(strings.VALUE_ATTR) || '';\n        });\n      },\n      getMenuItemTextAtIndex: function (index) {\n        return _this.menu.getPrimaryTextAtIndex(index);\n      },\n      addClassAtIndex: function (index, className) {\n        _this.menu.items[index].classList.add(className);\n      },\n      removeClassAtIndex: function (index, className) {\n        _this.menu.items[index].classList.remove(className);\n      },\n      isTypeaheadInProgress: function () {\n        return _this.menu.typeaheadInProgress;\n      },\n      typeaheadMatchItem: function (nextChar, startingIndex) {\n        return _this.menu.typeaheadMatchItem(nextChar, startingIndex);\n      }\n    }; // tslint:enable:object-literal-sort-keys\n  };\n\n  MDCSelect.prototype.getCommonAdapterMethods = function () {\n    var _this = this; // tslint:disable:object-literal-sort-keys Methods should be in the same order as the adapter interface.\n\n\n    return {\n      addClass: function (className) {\n        _this.root.classList.add(className);\n      },\n      removeClass: function (className) {\n        _this.root.classList.remove(className);\n      },\n      hasClass: function (className) {\n        return _this.root.classList.contains(className);\n      },\n      setRippleCenter: function (normalizedX) {\n        _this.lineRipple && _this.lineRipple.setRippleCenter(normalizedX);\n      },\n      activateBottomLine: function () {\n        _this.lineRipple && _this.lineRipple.activate();\n      },\n      deactivateBottomLine: function () {\n        _this.lineRipple && _this.lineRipple.deactivate();\n      },\n      notifyChange: function (value) {\n        var index = _this.selectedIndex;\n\n        _this.emit(strings.CHANGE_EVENT, {\n          value: value,\n          index: index\n        }, true\n        /* shouldBubble  */\n        );\n      }\n    }; // tslint:enable:object-literal-sort-keys\n  };\n\n  MDCSelect.prototype.getOutlineAdapterMethods = function () {\n    var _this = this; // tslint:disable:object-literal-sort-keys Methods should be in the same order as the adapter interface.\n\n\n    return {\n      hasOutline: function () {\n        return Boolean(_this.outline);\n      },\n      notchOutline: function (labelWidth) {\n        _this.outline && _this.outline.notch(labelWidth);\n      },\n      closeOutline: function () {\n        _this.outline && _this.outline.closeNotch();\n      }\n    }; // tslint:enable:object-literal-sort-keys\n  };\n\n  MDCSelect.prototype.getLabelAdapterMethods = function () {\n    var _this = this; // tslint:disable:object-literal-sort-keys Methods should be in the same order as the adapter interface.\n\n\n    return {\n      hasLabel: function () {\n        return !!_this.label;\n      },\n      floatLabel: function (shouldFloat) {\n        _this.label && _this.label.float(shouldFloat);\n      },\n      getLabelWidth: function () {\n        return _this.label ? _this.label.getWidth() : 0;\n      },\n      setLabelRequired: function (isRequired) {\n        _this.label && _this.label.setRequired(isRequired);\n      }\n    }; // tslint:enable:object-literal-sort-keys\n  };\n  /**\n   * Calculates where the line ripple should start based on the x coordinate within the component.\n   */\n\n\n  MDCSelect.prototype.getNormalizedXCoordinate = function (evt) {\n    var targetClientRect = evt.target.getBoundingClientRect();\n    var xCoordinate = this.isTouchEvent(evt) ? evt.touches[0].clientX : evt.clientX;\n    return xCoordinate - targetClientRect.left;\n  };\n\n  MDCSelect.prototype.isTouchEvent = function (evt) {\n    return Boolean(evt.touches);\n  };\n  /**\n   * Returns a map of all subcomponents to subfoundations.\n   */\n\n\n  MDCSelect.prototype.getFoundationMap = function () {\n    return {\n      helperText: this.helperText ? this.helperText.foundationForSelect : undefined,\n      leadingIcon: this.leadingIcon ? this.leadingIcon.foundationForSelect : undefined\n    };\n  };\n\n  return MDCSelect;\n}(MDCComponent);\n\nexport { MDCSelect };","map":{"version":3,"sources":["component.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["/**\n * @license\n * Copyright 2016 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\nimport { __assign, __extends } from \"tslib\";\nimport { MDCComponent } from '@material/base/component';\nimport { MDCFloatingLabel } from '@material/floating-label/component';\nimport { MDCLineRipple } from '@material/line-ripple/component';\nimport * as menuSurfaceConstants from '@material/menu-surface/constants';\nimport { MDCMenu } from '@material/menu/component';\nimport * as menuConstants from '@material/menu/constants';\nimport { MDCNotchedOutline } from '@material/notched-outline/component';\nimport { MDCRipple } from '@material/ripple/component';\nimport { MDCRippleFoundation } from '@material/ripple/foundation';\nimport { cssClasses, strings } from './constants';\nimport { MDCSelectFoundation } from './foundation';\nimport { MDCSelectHelperText } from './helper-text/component';\nimport { MDCSelectIcon } from './icon/component';\nvar MDCSelect = /** @class */ (function (_super) {\n    __extends(MDCSelect, _super);\n    function MDCSelect() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    MDCSelect.attachTo = function (root) {\n        return new MDCSelect(root);\n    };\n    MDCSelect.prototype.initialize = function (labelFactory, lineRippleFactory, outlineFactory, menuFactory, iconFactory, helperTextFactory) {\n        if (labelFactory === void 0) { labelFactory = function (el) { return new MDCFloatingLabel(el); }; }\n        if (lineRippleFactory === void 0) { lineRippleFactory = function (el) { return new MDCLineRipple(el); }; }\n        if (outlineFactory === void 0) { outlineFactory = function (el) { return new MDCNotchedOutline(el); }; }\n        if (menuFactory === void 0) { menuFactory = function (el) { return new MDCMenu(el); }; }\n        if (iconFactory === void 0) { iconFactory = function (el) { return new MDCSelectIcon(el); }; }\n        if (helperTextFactory === void 0) { helperTextFactory = function (el) { return new MDCSelectHelperText(el); }; }\n        this.selectAnchor =\n            this.root.querySelector(strings.SELECT_ANCHOR_SELECTOR);\n        this.selectedText =\n            this.root.querySelector(strings.SELECTED_TEXT_SELECTOR);\n        if (!this.selectedText) {\n            throw new Error('MDCSelect: Missing required element: The following selector must be present: ' +\n                (\"'\" + strings.SELECTED_TEXT_SELECTOR + \"'\"));\n        }\n        if (this.selectAnchor.hasAttribute(strings.ARIA_CONTROLS)) {\n            var helperTextElement = document.getElementById(this.selectAnchor.getAttribute(strings.ARIA_CONTROLS));\n            if (helperTextElement) {\n                this.helperText = helperTextFactory(helperTextElement);\n            }\n        }\n        this.menuSetup(menuFactory);\n        var labelElement = this.root.querySelector(strings.LABEL_SELECTOR);\n        this.label = labelElement ? labelFactory(labelElement) : null;\n        var lineRippleElement = this.root.querySelector(strings.LINE_RIPPLE_SELECTOR);\n        this.lineRipple =\n            lineRippleElement ? lineRippleFactory(lineRippleElement) : null;\n        var outlineElement = this.root.querySelector(strings.OUTLINE_SELECTOR);\n        this.outline = outlineElement ? outlineFactory(outlineElement) : null;\n        var leadingIcon = this.root.querySelector(strings.LEADING_ICON_SELECTOR);\n        if (leadingIcon) {\n            this.leadingIcon = iconFactory(leadingIcon);\n        }\n        if (!this.root.classList.contains(cssClasses.OUTLINED)) {\n            this.ripple = this.createRipple();\n        }\n    };\n    /**\n     * Initializes the select's event listeners and internal state based\n     * on the environment's state.\n     */\n    MDCSelect.prototype.initialSyncWithDOM = function () {\n        var _this = this;\n        this.handleChange = function () {\n            _this.foundation.handleChange();\n        };\n        this.handleFocus = function () {\n            _this.foundation.handleFocus();\n        };\n        this.handleBlur = function () {\n            _this.foundation.handleBlur();\n        };\n        this.handleClick = function (evt) {\n            _this.selectAnchor.focus();\n            _this.foundation.handleClick(_this.getNormalizedXCoordinate(evt));\n        };\n        this.handleKeydown = function (evt) {\n            _this.foundation.handleKeydown(evt);\n        };\n        this.handleMenuItemAction = function (evt) {\n            _this.foundation.handleMenuItemAction(evt.detail.index);\n        };\n        this.handleMenuOpened = function () {\n            _this.foundation.handleMenuOpened();\n        };\n        this.handleMenuClosed = function () {\n            _this.foundation.handleMenuClosed();\n        };\n        this.selectAnchor.addEventListener('focus', this.handleFocus);\n        this.selectAnchor.addEventListener('blur', this.handleBlur);\n        this.selectAnchor.addEventListener('click', this.handleClick);\n        this.selectAnchor.addEventListener('keydown', this.handleKeydown);\n        this.menu.listen(menuSurfaceConstants.strings.CLOSED_EVENT, this.handleMenuClosed);\n        this.menu.listen(menuSurfaceConstants.strings.OPENED_EVENT, this.handleMenuOpened);\n        this.menu.listen(menuConstants.strings.SELECTED_EVENT, this.handleMenuItemAction);\n    };\n    MDCSelect.prototype.destroy = function () {\n        this.selectAnchor.removeEventListener('change', this.handleChange);\n        this.selectAnchor.removeEventListener('focus', this.handleFocus);\n        this.selectAnchor.removeEventListener('blur', this.handleBlur);\n        this.selectAnchor.removeEventListener('keydown', this.handleKeydown);\n        this.selectAnchor.removeEventListener('click', this.handleClick);\n        this.menu.unlisten(menuSurfaceConstants.strings.CLOSED_EVENT, this.handleMenuClosed);\n        this.menu.unlisten(menuSurfaceConstants.strings.OPENED_EVENT, this.handleMenuOpened);\n        this.menu.unlisten(menuConstants.strings.SELECTED_EVENT, this.handleMenuItemAction);\n        this.menu.destroy();\n        if (this.ripple) {\n            this.ripple.destroy();\n        }\n        if (this.outline) {\n            this.outline.destroy();\n        }\n        if (this.leadingIcon) {\n            this.leadingIcon.destroy();\n        }\n        if (this.helperText) {\n            this.helperText.destroy();\n        }\n        _super.prototype.destroy.call(this);\n    };\n    Object.defineProperty(MDCSelect.prototype, \"value\", {\n        get: function () {\n            return this.foundation.getValue();\n        },\n        set: function (value) {\n            this.foundation.setValue(value);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MDCSelect.prototype, \"selectedIndex\", {\n        get: function () {\n            return this.foundation.getSelectedIndex();\n        },\n        set: function (selectedIndex) {\n            this.foundation.setSelectedIndex(selectedIndex, /** closeMenu */ true);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MDCSelect.prototype, \"disabled\", {\n        get: function () {\n            return this.foundation.getDisabled();\n        },\n        set: function (disabled) {\n            this.foundation.setDisabled(disabled);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MDCSelect.prototype, \"leadingIconAriaLabel\", {\n        set: function (label) {\n            this.foundation.setLeadingIconAriaLabel(label);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MDCSelect.prototype, \"leadingIconContent\", {\n        /**\n         * Sets the text content of the leading icon.\n         */\n        set: function (content) {\n            this.foundation.setLeadingIconContent(content);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MDCSelect.prototype, \"helperTextContent\", {\n        /**\n         * Sets the text content of the helper text.\n         */\n        set: function (content) {\n            this.foundation.setHelperTextContent(content);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MDCSelect.prototype, \"useDefaultValidation\", {\n        /**\n         * Enables or disables the default validation scheme where a required select\n         * must be non-empty. Set to false for custom validation.\n         * @param useDefaultValidation Set this to false to ignore default\n         *     validation scheme.\n         */\n        set: function (useDefaultValidation) {\n            this.foundation.setUseDefaultValidation(useDefaultValidation);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MDCSelect.prototype, \"valid\", {\n        /**\n         * Checks if the select is in a valid state.\n         */\n        get: function () {\n            return this.foundation.isValid();\n        },\n        /**\n         * Sets the current invalid state of the select.\n         */\n        set: function (isValid) {\n            this.foundation.setValid(isValid);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MDCSelect.prototype, \"required\", {\n        /**\n         * Returns whether the select is required.\n         */\n        get: function () {\n            return this.foundation.getRequired();\n        },\n        /**\n         * Sets the control to the required state.\n         */\n        set: function (isRequired) {\n            this.foundation.setRequired(isRequired);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Re-calculates if the notched outline should be notched and if the label\n     * should float.\n     */\n    MDCSelect.prototype.layout = function () {\n        this.foundation.layout();\n    };\n    /**\n     * Synchronizes the list of options with the state of the foundation. Call\n     * this whenever menu options are dynamically updated.\n     */\n    MDCSelect.prototype.layoutOptions = function () {\n        this.foundation.layoutOptions();\n        this.menu.layout();\n    };\n    MDCSelect.prototype.getDefaultFoundation = function () {\n        // DO NOT INLINE this variable. For backward compatibility, foundations take a Partial<MDCFooAdapter>.\n        // To ensure we don't accidentally omit any methods, we need a separate, strongly typed adapter variable.\n        var adapter = __assign(__assign(__assign(__assign({}, this.getSelectAdapterMethods()), this.getCommonAdapterMethods()), this.getOutlineAdapterMethods()), this.getLabelAdapterMethods());\n        return new MDCSelectFoundation(adapter, this.getFoundationMap());\n    };\n    /**\n     * Handles setup for the menu.\n     */\n    MDCSelect.prototype.menuSetup = function (menuFactory) {\n        this.menuElement = this.root.querySelector(strings.MENU_SELECTOR);\n        this.menu = menuFactory(this.menuElement);\n        this.menu.hasTypeahead = true;\n    };\n    MDCSelect.prototype.createRipple = function () {\n        var _this = this;\n        // DO NOT INLINE this variable. For backward compatibility, foundations take a Partial<MDCFooAdapter>.\n        // To ensure we don't accidentally omit any methods, we need a separate, strongly typed adapter variable.\n        // tslint:disable:object-literal-sort-keys Methods should be in the same order as the adapter interface.\n        var adapter = __assign(__assign({}, MDCRipple.createAdapter({ root: this.selectAnchor })), { registerInteractionHandler: function (evtType, handler) {\n                _this.selectAnchor.addEventListener(evtType, handler);\n            }, deregisterInteractionHandler: function (evtType, handler) {\n                _this.selectAnchor.removeEventListener(evtType, handler);\n            } });\n        // tslint:enable:object-literal-sort-keys\n        return new MDCRipple(this.selectAnchor, new MDCRippleFoundation(adapter));\n    };\n    MDCSelect.prototype.getSelectAdapterMethods = function () {\n        var _this = this;\n        // tslint:disable:object-literal-sort-keys Methods should be in the same order as the adapter interface.\n        return {\n            getSelectedMenuItem: function () {\n                return _this.menuElement.querySelector(strings.SELECTED_ITEM_SELECTOR);\n            },\n            getMenuItemAttr: function (menuItem, attr) {\n                return menuItem.getAttribute(attr);\n            },\n            setSelectedText: function (text) {\n                _this.selectedText.textContent = text;\n            },\n            isSelectAnchorFocused: function () { return document.activeElement === _this.selectAnchor; },\n            getSelectAnchorAttr: function (attr) {\n                return _this.selectAnchor.getAttribute(attr);\n            },\n            setSelectAnchorAttr: function (attr, value) {\n                _this.selectAnchor.setAttribute(attr, value);\n            },\n            removeSelectAnchorAttr: function (attr) {\n                _this.selectAnchor.removeAttribute(attr);\n            },\n            addMenuClass: function (className) {\n                _this.menuElement.classList.add(className);\n            },\n            removeMenuClass: function (className) {\n                _this.menuElement.classList.remove(className);\n            },\n            openMenu: function () {\n                _this.menu.open = true;\n            },\n            closeMenu: function () {\n                _this.menu.open = false;\n            },\n            getAnchorElement: function () {\n                return _this.root.querySelector(strings.SELECT_ANCHOR_SELECTOR);\n            },\n            setMenuAnchorElement: function (anchorEl) {\n                _this.menu.setAnchorElement(anchorEl);\n            },\n            setMenuAnchorCorner: function (anchorCorner) {\n                _this.menu.setAnchorCorner(anchorCorner);\n            },\n            setMenuWrapFocus: function (wrapFocus) {\n                _this.menu.wrapFocus = wrapFocus;\n            },\n            setAttributeAtIndex: function (index, attributeName, attributeValue) {\n                _this.menu.items[index].setAttribute(attributeName, attributeValue);\n            },\n            removeAttributeAtIndex: function (index, attributeName) {\n                _this.menu.items[index].removeAttribute(attributeName);\n            },\n            focusMenuItemAtIndex: function (index) {\n                _this.menu.items[index].focus();\n            },\n            getMenuItemCount: function () { return _this.menu.items.length; },\n            getMenuItemValues: function () { return _this.menu.items.map(function (el) { return el.getAttribute(strings.VALUE_ATTR) || ''; }); },\n            getMenuItemTextAtIndex: function (index) {\n                return _this.menu.getPrimaryTextAtIndex(index);\n            },\n            addClassAtIndex: function (index, className) {\n                _this.menu.items[index].classList.add(className);\n            },\n            removeClassAtIndex: function (index, className) {\n                _this.menu.items[index].classList.remove(className);\n            },\n            isTypeaheadInProgress: function () { return _this.menu.typeaheadInProgress; },\n            typeaheadMatchItem: function (nextChar, startingIndex) {\n                return _this.menu.typeaheadMatchItem(nextChar, startingIndex);\n            },\n        };\n        // tslint:enable:object-literal-sort-keys\n    };\n    MDCSelect.prototype.getCommonAdapterMethods = function () {\n        var _this = this;\n        // tslint:disable:object-literal-sort-keys Methods should be in the same order as the adapter interface.\n        return {\n            addClass: function (className) {\n                _this.root.classList.add(className);\n            },\n            removeClass: function (className) {\n                _this.root.classList.remove(className);\n            },\n            hasClass: function (className) { return _this.root.classList.contains(className); },\n            setRippleCenter: function (normalizedX) {\n                _this.lineRipple && _this.lineRipple.setRippleCenter(normalizedX);\n            },\n            activateBottomLine: function () {\n                _this.lineRipple && _this.lineRipple.activate();\n            },\n            deactivateBottomLine: function () {\n                _this.lineRipple && _this.lineRipple.deactivate();\n            },\n            notifyChange: function (value) {\n                var index = _this.selectedIndex;\n                _this.emit(strings.CHANGE_EVENT, { value: value, index: index }, true /* shouldBubble  */);\n            },\n        };\n        // tslint:enable:object-literal-sort-keys\n    };\n    MDCSelect.prototype.getOutlineAdapterMethods = function () {\n        var _this = this;\n        // tslint:disable:object-literal-sort-keys Methods should be in the same order as the adapter interface.\n        return {\n            hasOutline: function () { return Boolean(_this.outline); },\n            notchOutline: function (labelWidth) {\n                _this.outline && _this.outline.notch(labelWidth);\n            },\n            closeOutline: function () {\n                _this.outline && _this.outline.closeNotch();\n            },\n        };\n        // tslint:enable:object-literal-sort-keys\n    };\n    MDCSelect.prototype.getLabelAdapterMethods = function () {\n        var _this = this;\n        // tslint:disable:object-literal-sort-keys Methods should be in the same order as the adapter interface.\n        return {\n            hasLabel: function () { return !!_this.label; },\n            floatLabel: function (shouldFloat) {\n                _this.label && _this.label.float(shouldFloat);\n            },\n            getLabelWidth: function () { return _this.label ? _this.label.getWidth() : 0; },\n            setLabelRequired: function (isRequired) {\n                _this.label && _this.label.setRequired(isRequired);\n            },\n        };\n        // tslint:enable:object-literal-sort-keys\n    };\n    /**\n     * Calculates where the line ripple should start based on the x coordinate within the component.\n     */\n    MDCSelect.prototype.getNormalizedXCoordinate = function (evt) {\n        var targetClientRect = evt.target.getBoundingClientRect();\n        var xCoordinate = this.isTouchEvent(evt) ? evt.touches[0].clientX : evt.clientX;\n        return xCoordinate - targetClientRect.left;\n    };\n    MDCSelect.prototype.isTouchEvent = function (evt) {\n        return Boolean(evt.touches);\n    };\n    /**\n     * Returns a map of all subcomponents to subfoundations.\n     */\n    MDCSelect.prototype.getFoundationMap = function () {\n        return {\n            helperText: this.helperText ? this.helperText.foundationForSelect :\n                undefined,\n            leadingIcon: this.leadingIcon ? this.leadingIcon.foundationForSelect :\n                undefined,\n        };\n    };\n    return MDCSelect;\n}(MDCComponent));\nexport { MDCSelect };\n//# sourceMappingURL=component.js.map"]},"metadata":{},"sourceType":"module"}