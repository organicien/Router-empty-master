{"ast":null,"code":"/**\n * @license\n * Copyright 2018 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\nimport { __assign, __extends } from \"tslib\";\nimport { MDCFoundation } from '@material/base/foundation';\nimport { cssClasses as listCssClasses } from '@material/list/constants';\nimport { MDCMenuSurfaceFoundation } from '@material/menu-surface/foundation';\nimport { cssClasses, DefaultFocusState, numbers, strings } from './constants';\n\nvar MDCMenuFoundation =\n/** @class */\nfunction (_super) {\n  __extends(MDCMenuFoundation, _super);\n\n  function MDCMenuFoundation(adapter) {\n    var _this = _super.call(this, __assign(__assign({}, MDCMenuFoundation.defaultAdapter), adapter)) || this;\n\n    _this.closeAnimationEndTimerId_ = 0;\n    _this.defaultFocusState_ = DefaultFocusState.LIST_ROOT;\n    return _this;\n  }\n\n  Object.defineProperty(MDCMenuFoundation, \"cssClasses\", {\n    get: function () {\n      return cssClasses;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(MDCMenuFoundation, \"strings\", {\n    get: function () {\n      return strings;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(MDCMenuFoundation, \"numbers\", {\n    get: function () {\n      return numbers;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(MDCMenuFoundation, \"defaultAdapter\", {\n    /**\n     * @see {@link MDCMenuAdapter} for typing information on parameters and return types.\n     */\n    get: function () {\n      // tslint:disable:object-literal-sort-keys Methods should be in the same order as the adapter interface.\n      return {\n        addClassToElementAtIndex: function () {\n          return undefined;\n        },\n        removeClassFromElementAtIndex: function () {\n          return undefined;\n        },\n        addAttributeToElementAtIndex: function () {\n          return undefined;\n        },\n        removeAttributeFromElementAtIndex: function () {\n          return undefined;\n        },\n        elementContainsClass: function () {\n          return false;\n        },\n        closeSurface: function () {\n          return undefined;\n        },\n        getElementIndex: function () {\n          return -1;\n        },\n        notifySelected: function () {\n          return undefined;\n        },\n        getMenuItemCount: function () {\n          return 0;\n        },\n        focusItemAtIndex: function () {\n          return undefined;\n        },\n        focusListRoot: function () {\n          return undefined;\n        },\n        getSelectedSiblingOfItemAtIndex: function () {\n          return -1;\n        },\n        isSelectableItemAtIndex: function () {\n          return false;\n        }\n      }; // tslint:enable:object-literal-sort-keys\n    },\n    enumerable: true,\n    configurable: true\n  });\n\n  MDCMenuFoundation.prototype.destroy = function () {\n    if (this.closeAnimationEndTimerId_) {\n      clearTimeout(this.closeAnimationEndTimerId_);\n    }\n\n    this.adapter.closeSurface();\n  };\n\n  MDCMenuFoundation.prototype.handleKeydown = function (evt) {\n    var key = evt.key,\n        keyCode = evt.keyCode;\n    var isTab = key === 'Tab' || keyCode === 9;\n\n    if (isTab) {\n      this.adapter.closeSurface(\n      /** skipRestoreFocus */\n      true);\n    }\n  };\n\n  MDCMenuFoundation.prototype.handleItemAction = function (listItem) {\n    var _this = this;\n\n    var index = this.adapter.getElementIndex(listItem);\n\n    if (index < 0) {\n      return;\n    }\n\n    this.adapter.notifySelected({\n      index: index\n    });\n    this.adapter.closeSurface(); // Wait for the menu to close before adding/removing classes that affect styles.\n\n    this.closeAnimationEndTimerId_ = setTimeout(function () {\n      // Recompute the index in case the menu contents have changed.\n      var recomputedIndex = _this.adapter.getElementIndex(listItem);\n\n      if (recomputedIndex >= 0 && _this.adapter.isSelectableItemAtIndex(recomputedIndex)) {\n        _this.setSelectedIndex(recomputedIndex);\n      }\n    }, MDCMenuSurfaceFoundation.numbers.TRANSITION_CLOSE_DURATION);\n  };\n\n  MDCMenuFoundation.prototype.handleMenuSurfaceOpened = function () {\n    switch (this.defaultFocusState_) {\n      case DefaultFocusState.FIRST_ITEM:\n        this.adapter.focusItemAtIndex(0);\n        break;\n\n      case DefaultFocusState.LAST_ITEM:\n        this.adapter.focusItemAtIndex(this.adapter.getMenuItemCount() - 1);\n        break;\n\n      case DefaultFocusState.NONE:\n        // Do nothing.\n        break;\n\n      default:\n        this.adapter.focusListRoot();\n        break;\n    }\n  };\n  /**\n   * Sets default focus state where the menu should focus every time when menu\n   * is opened. Focuses the list root (`DefaultFocusState.LIST_ROOT`) element by\n   * default.\n   */\n\n\n  MDCMenuFoundation.prototype.setDefaultFocusState = function (focusState) {\n    this.defaultFocusState_ = focusState;\n  };\n  /**\n   * Selects the list item at `index` within the menu.\n   * @param index Index of list item within the menu.\n   */\n\n\n  MDCMenuFoundation.prototype.setSelectedIndex = function (index) {\n    this.validatedIndex_(index);\n\n    if (!this.adapter.isSelectableItemAtIndex(index)) {\n      throw new Error('MDCMenuFoundation: No selection group at specified index.');\n    }\n\n    var prevSelectedIndex = this.adapter.getSelectedSiblingOfItemAtIndex(index);\n\n    if (prevSelectedIndex >= 0) {\n      this.adapter.removeAttributeFromElementAtIndex(prevSelectedIndex, strings.ARIA_CHECKED_ATTR);\n      this.adapter.removeClassFromElementAtIndex(prevSelectedIndex, cssClasses.MENU_SELECTED_LIST_ITEM);\n    }\n\n    this.adapter.addClassToElementAtIndex(index, cssClasses.MENU_SELECTED_LIST_ITEM);\n    this.adapter.addAttributeToElementAtIndex(index, strings.ARIA_CHECKED_ATTR, 'true');\n  };\n  /**\n   * Sets the enabled state to isEnabled for the menu item at the given index.\n   * @param index Index of the menu item\n   * @param isEnabled The desired enabled state of the menu item.\n   */\n\n\n  MDCMenuFoundation.prototype.setEnabled = function (index, isEnabled) {\n    this.validatedIndex_(index);\n\n    if (isEnabled) {\n      this.adapter.removeClassFromElementAtIndex(index, listCssClasses.LIST_ITEM_DISABLED_CLASS);\n      this.adapter.addAttributeToElementAtIndex(index, strings.ARIA_DISABLED_ATTR, 'false');\n    } else {\n      this.adapter.addClassToElementAtIndex(index, listCssClasses.LIST_ITEM_DISABLED_CLASS);\n      this.adapter.addAttributeToElementAtIndex(index, strings.ARIA_DISABLED_ATTR, 'true');\n    }\n  };\n\n  MDCMenuFoundation.prototype.validatedIndex_ = function (index) {\n    var menuSize = this.adapter.getMenuItemCount();\n    var isIndexInRange = index >= 0 && index < menuSize;\n\n    if (!isIndexInRange) {\n      throw new Error('MDCMenuFoundation: No list item at specified index.');\n    }\n  };\n\n  return MDCMenuFoundation;\n}(MDCFoundation);\n\nexport { MDCMenuFoundation }; // tslint:disable-next-line:no-default-export Needed for backward compatibility with MDC Web v0.44.0 and earlier.\n\nexport default MDCMenuFoundation;","map":{"version":3,"sources":["foundation.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["/**\n * @license\n * Copyright 2018 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\nimport { __assign, __extends } from \"tslib\";\nimport { MDCFoundation } from '@material/base/foundation';\nimport { cssClasses as listCssClasses } from '@material/list/constants';\nimport { MDCMenuSurfaceFoundation } from '@material/menu-surface/foundation';\nimport { cssClasses, DefaultFocusState, numbers, strings } from './constants';\nvar MDCMenuFoundation = /** @class */ (function (_super) {\n    __extends(MDCMenuFoundation, _super);\n    function MDCMenuFoundation(adapter) {\n        var _this = _super.call(this, __assign(__assign({}, MDCMenuFoundation.defaultAdapter), adapter)) || this;\n        _this.closeAnimationEndTimerId_ = 0;\n        _this.defaultFocusState_ = DefaultFocusState.LIST_ROOT;\n        return _this;\n    }\n    Object.defineProperty(MDCMenuFoundation, \"cssClasses\", {\n        get: function () {\n            return cssClasses;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MDCMenuFoundation, \"strings\", {\n        get: function () {\n            return strings;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MDCMenuFoundation, \"numbers\", {\n        get: function () {\n            return numbers;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MDCMenuFoundation, \"defaultAdapter\", {\n        /**\n         * @see {@link MDCMenuAdapter} for typing information on parameters and return types.\n         */\n        get: function () {\n            // tslint:disable:object-literal-sort-keys Methods should be in the same order as the adapter interface.\n            return {\n                addClassToElementAtIndex: function () { return undefined; },\n                removeClassFromElementAtIndex: function () { return undefined; },\n                addAttributeToElementAtIndex: function () { return undefined; },\n                removeAttributeFromElementAtIndex: function () { return undefined; },\n                elementContainsClass: function () { return false; },\n                closeSurface: function () { return undefined; },\n                getElementIndex: function () { return -1; },\n                notifySelected: function () { return undefined; },\n                getMenuItemCount: function () { return 0; },\n                focusItemAtIndex: function () { return undefined; },\n                focusListRoot: function () { return undefined; },\n                getSelectedSiblingOfItemAtIndex: function () { return -1; },\n                isSelectableItemAtIndex: function () { return false; },\n            };\n            // tslint:enable:object-literal-sort-keys\n        },\n        enumerable: true,\n        configurable: true\n    });\n    MDCMenuFoundation.prototype.destroy = function () {\n        if (this.closeAnimationEndTimerId_) {\n            clearTimeout(this.closeAnimationEndTimerId_);\n        }\n        this.adapter.closeSurface();\n    };\n    MDCMenuFoundation.prototype.handleKeydown = function (evt) {\n        var key = evt.key, keyCode = evt.keyCode;\n        var isTab = key === 'Tab' || keyCode === 9;\n        if (isTab) {\n            this.adapter.closeSurface(/** skipRestoreFocus */ true);\n        }\n    };\n    MDCMenuFoundation.prototype.handleItemAction = function (listItem) {\n        var _this = this;\n        var index = this.adapter.getElementIndex(listItem);\n        if (index < 0) {\n            return;\n        }\n        this.adapter.notifySelected({ index: index });\n        this.adapter.closeSurface();\n        // Wait for the menu to close before adding/removing classes that affect styles.\n        this.closeAnimationEndTimerId_ = setTimeout(function () {\n            // Recompute the index in case the menu contents have changed.\n            var recomputedIndex = _this.adapter.getElementIndex(listItem);\n            if (recomputedIndex >= 0 &&\n                _this.adapter.isSelectableItemAtIndex(recomputedIndex)) {\n                _this.setSelectedIndex(recomputedIndex);\n            }\n        }, MDCMenuSurfaceFoundation.numbers.TRANSITION_CLOSE_DURATION);\n    };\n    MDCMenuFoundation.prototype.handleMenuSurfaceOpened = function () {\n        switch (this.defaultFocusState_) {\n            case DefaultFocusState.FIRST_ITEM:\n                this.adapter.focusItemAtIndex(0);\n                break;\n            case DefaultFocusState.LAST_ITEM:\n                this.adapter.focusItemAtIndex(this.adapter.getMenuItemCount() - 1);\n                break;\n            case DefaultFocusState.NONE:\n                // Do nothing.\n                break;\n            default:\n                this.adapter.focusListRoot();\n                break;\n        }\n    };\n    /**\n     * Sets default focus state where the menu should focus every time when menu\n     * is opened. Focuses the list root (`DefaultFocusState.LIST_ROOT`) element by\n     * default.\n     */\n    MDCMenuFoundation.prototype.setDefaultFocusState = function (focusState) {\n        this.defaultFocusState_ = focusState;\n    };\n    /**\n     * Selects the list item at `index` within the menu.\n     * @param index Index of list item within the menu.\n     */\n    MDCMenuFoundation.prototype.setSelectedIndex = function (index) {\n        this.validatedIndex_(index);\n        if (!this.adapter.isSelectableItemAtIndex(index)) {\n            throw new Error('MDCMenuFoundation: No selection group at specified index.');\n        }\n        var prevSelectedIndex = this.adapter.getSelectedSiblingOfItemAtIndex(index);\n        if (prevSelectedIndex >= 0) {\n            this.adapter.removeAttributeFromElementAtIndex(prevSelectedIndex, strings.ARIA_CHECKED_ATTR);\n            this.adapter.removeClassFromElementAtIndex(prevSelectedIndex, cssClasses.MENU_SELECTED_LIST_ITEM);\n        }\n        this.adapter.addClassToElementAtIndex(index, cssClasses.MENU_SELECTED_LIST_ITEM);\n        this.adapter.addAttributeToElementAtIndex(index, strings.ARIA_CHECKED_ATTR, 'true');\n    };\n    /**\n     * Sets the enabled state to isEnabled for the menu item at the given index.\n     * @param index Index of the menu item\n     * @param isEnabled The desired enabled state of the menu item.\n     */\n    MDCMenuFoundation.prototype.setEnabled = function (index, isEnabled) {\n        this.validatedIndex_(index);\n        if (isEnabled) {\n            this.adapter.removeClassFromElementAtIndex(index, listCssClasses.LIST_ITEM_DISABLED_CLASS);\n            this.adapter.addAttributeToElementAtIndex(index, strings.ARIA_DISABLED_ATTR, 'false');\n        }\n        else {\n            this.adapter.addClassToElementAtIndex(index, listCssClasses.LIST_ITEM_DISABLED_CLASS);\n            this.adapter.addAttributeToElementAtIndex(index, strings.ARIA_DISABLED_ATTR, 'true');\n        }\n    };\n    MDCMenuFoundation.prototype.validatedIndex_ = function (index) {\n        var menuSize = this.adapter.getMenuItemCount();\n        var isIndexInRange = index >= 0 && index < menuSize;\n        if (!isIndexInRange) {\n            throw new Error('MDCMenuFoundation: No list item at specified index.');\n        }\n    };\n    return MDCMenuFoundation;\n}(MDCFoundation));\nexport { MDCMenuFoundation };\n// tslint:disable-next-line:no-default-export Needed for backward compatibility with MDC Web v0.44.0 and earlier.\nexport default MDCMenuFoundation;\n//# sourceMappingURL=foundation.js.map"]},"metadata":{},"sourceType":"module"}