{"ast":null,"code":"/**\n * @license\n * Copyright 2020 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\nvar FOCUS_SENTINEL_CLASS = 'mdc-dom-focus-sentinel';\n/**\n * Utility to trap focus in a given root element, e.g. for modal components such\n * as dialogs. The root should have at least one focusable child element,\n * for setting initial focus when trapping focus.\n * Also tracks the previously focused element, and restores focus to that\n * element when releasing focus.\n */\n\nvar FocusTrap =\n/** @class */\nfunction () {\n  function FocusTrap(root, options) {\n    if (options === void 0) {\n      options = {};\n    }\n\n    this.root = root;\n    this.options = options; // Previously focused element before trapping focus.\n\n    this.elFocusedBeforeTrapFocus = null;\n  }\n  /**\n   * Traps focus in `root`. Also focuses on either `initialFocusEl` if set;\n   * otherwises sets initial focus to the first focusable child element.\n   */\n\n\n  FocusTrap.prototype.trapFocus = function () {\n    var focusableEls = this.getFocusableElements(this.root);\n\n    if (focusableEls.length === 0) {\n      throw new Error('FocusTrap: Element must have at least one focusable child.');\n    }\n\n    this.elFocusedBeforeTrapFocus = document.activeElement instanceof HTMLElement ? document.activeElement : null;\n    this.wrapTabFocus(this.root, focusableEls);\n\n    if (!this.options.skipInitialFocus) {\n      this.focusInitialElement(focusableEls, this.options.initialFocusEl);\n    }\n  };\n  /**\n   * Releases focus from `root`. Also restores focus to the previously focused\n   * element.\n   */\n\n\n  FocusTrap.prototype.releaseFocus = function () {\n    [].slice.call(this.root.querySelectorAll(\".\" + FOCUS_SENTINEL_CLASS)).forEach(function (sentinelEl) {\n      sentinelEl.parentElement.removeChild(sentinelEl);\n    });\n\n    if (this.elFocusedBeforeTrapFocus) {\n      this.elFocusedBeforeTrapFocus.focus();\n    }\n  };\n  /**\n   * Wraps tab focus within `el` by adding two hidden sentinel divs which are\n   * used to mark the beginning and the end of the tabbable region. When\n   * focused, these sentinel elements redirect focus to the first/last\n   * children elements of the tabbable region, ensuring that focus is trapped\n   * within that region.\n   */\n\n\n  FocusTrap.prototype.wrapTabFocus = function (el, focusableEls) {\n    var sentinelStart = this.createSentinel();\n    var sentinelEnd = this.createSentinel();\n    sentinelStart.addEventListener('focus', function () {\n      if (focusableEls.length > 0) {\n        focusableEls[focusableEls.length - 1].focus();\n      }\n    });\n    sentinelEnd.addEventListener('focus', function () {\n      if (focusableEls.length > 0) {\n        focusableEls[0].focus();\n      }\n    });\n    el.insertBefore(sentinelStart, el.children[0]);\n    el.appendChild(sentinelEnd);\n  };\n  /**\n   * Focuses on `initialFocusEl` if defined and a child of the root element.\n   * Otherwise, focuses on the first focusable child element of the root.\n   */\n\n\n  FocusTrap.prototype.focusInitialElement = function (focusableEls, initialFocusEl) {\n    var focusIndex = 0;\n\n    if (initialFocusEl) {\n      focusIndex = Math.max(focusableEls.indexOf(initialFocusEl), 0);\n    }\n\n    focusableEls[focusIndex].focus();\n  };\n\n  FocusTrap.prototype.getFocusableElements = function (root) {\n    var focusableEls = [].slice.call(root.querySelectorAll('[autofocus], [tabindex], a, input, textarea, select, button'));\n    return focusableEls.filter(function (el) {\n      var isDisabledOrHidden = el.getAttribute('aria-disabled') === 'true' || el.getAttribute('disabled') != null || el.getAttribute('hidden') != null || el.getAttribute('aria-hidden') === 'true';\n      var isTabbableAndVisible = el.tabIndex >= 0 && el.getBoundingClientRect().width > 0 && !el.classList.contains(FOCUS_SENTINEL_CLASS) && !isDisabledOrHidden;\n      var isProgrammaticallyHidden = false;\n\n      if (isTabbableAndVisible) {\n        var style = getComputedStyle(el);\n        isProgrammaticallyHidden = style.display === 'none' || style.visibility === 'hidden';\n      }\n\n      return isTabbableAndVisible && !isProgrammaticallyHidden;\n    });\n  };\n\n  FocusTrap.prototype.createSentinel = function () {\n    var sentinel = document.createElement('div');\n    sentinel.setAttribute('tabindex', '0'); // Don't announce in screen readers.\n\n    sentinel.setAttribute('aria-hidden', 'true');\n    sentinel.classList.add(FOCUS_SENTINEL_CLASS);\n    return sentinel;\n  };\n\n  return FocusTrap;\n}();\n\nexport { FocusTrap };","map":{"version":3,"sources":["focus-trap.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["/**\n * @license\n * Copyright 2020 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\nvar FOCUS_SENTINEL_CLASS = 'mdc-dom-focus-sentinel';\n/**\n * Utility to trap focus in a given root element, e.g. for modal components such\n * as dialogs. The root should have at least one focusable child element,\n * for setting initial focus when trapping focus.\n * Also tracks the previously focused element, and restores focus to that\n * element when releasing focus.\n */\nvar FocusTrap = /** @class */ (function () {\n    function FocusTrap(root, options) {\n        if (options === void 0) { options = {}; }\n        this.root = root;\n        this.options = options;\n        // Previously focused element before trapping focus.\n        this.elFocusedBeforeTrapFocus = null;\n    }\n    /**\n     * Traps focus in `root`. Also focuses on either `initialFocusEl` if set;\n     * otherwises sets initial focus to the first focusable child element.\n     */\n    FocusTrap.prototype.trapFocus = function () {\n        var focusableEls = this.getFocusableElements(this.root);\n        if (focusableEls.length === 0) {\n            throw new Error('FocusTrap: Element must have at least one focusable child.');\n        }\n        this.elFocusedBeforeTrapFocus =\n            document.activeElement instanceof HTMLElement ? document.activeElement :\n                null;\n        this.wrapTabFocus(this.root, focusableEls);\n        if (!this.options.skipInitialFocus) {\n            this.focusInitialElement(focusableEls, this.options.initialFocusEl);\n        }\n    };\n    /**\n     * Releases focus from `root`. Also restores focus to the previously focused\n     * element.\n     */\n    FocusTrap.prototype.releaseFocus = function () {\n        [].slice.call(this.root.querySelectorAll(\".\" + FOCUS_SENTINEL_CLASS))\n            .forEach(function (sentinelEl) {\n            sentinelEl.parentElement.removeChild(sentinelEl);\n        });\n        if (this.elFocusedBeforeTrapFocus) {\n            this.elFocusedBeforeTrapFocus.focus();\n        }\n    };\n    /**\n     * Wraps tab focus within `el` by adding two hidden sentinel divs which are\n     * used to mark the beginning and the end of the tabbable region. When\n     * focused, these sentinel elements redirect focus to the first/last\n     * children elements of the tabbable region, ensuring that focus is trapped\n     * within that region.\n     */\n    FocusTrap.prototype.wrapTabFocus = function (el, focusableEls) {\n        var sentinelStart = this.createSentinel();\n        var sentinelEnd = this.createSentinel();\n        sentinelStart.addEventListener('focus', function () {\n            if (focusableEls.length > 0) {\n                focusableEls[focusableEls.length - 1].focus();\n            }\n        });\n        sentinelEnd.addEventListener('focus', function () {\n            if (focusableEls.length > 0) {\n                focusableEls[0].focus();\n            }\n        });\n        el.insertBefore(sentinelStart, el.children[0]);\n        el.appendChild(sentinelEnd);\n    };\n    /**\n     * Focuses on `initialFocusEl` if defined and a child of the root element.\n     * Otherwise, focuses on the first focusable child element of the root.\n     */\n    FocusTrap.prototype.focusInitialElement = function (focusableEls, initialFocusEl) {\n        var focusIndex = 0;\n        if (initialFocusEl) {\n            focusIndex = Math.max(focusableEls.indexOf(initialFocusEl), 0);\n        }\n        focusableEls[focusIndex].focus();\n    };\n    FocusTrap.prototype.getFocusableElements = function (root) {\n        var focusableEls = [].slice.call(root.querySelectorAll('[autofocus], [tabindex], a, input, textarea, select, button'));\n        return focusableEls.filter(function (el) {\n            var isDisabledOrHidden = el.getAttribute('aria-disabled') === 'true' ||\n                el.getAttribute('disabled') != null ||\n                el.getAttribute('hidden') != null ||\n                el.getAttribute('aria-hidden') === 'true';\n            var isTabbableAndVisible = el.tabIndex >= 0 &&\n                el.getBoundingClientRect().width > 0 &&\n                !el.classList.contains(FOCUS_SENTINEL_CLASS) && !isDisabledOrHidden;\n            var isProgrammaticallyHidden = false;\n            if (isTabbableAndVisible) {\n                var style = getComputedStyle(el);\n                isProgrammaticallyHidden =\n                    style.display === 'none' || style.visibility === 'hidden';\n            }\n            return isTabbableAndVisible && !isProgrammaticallyHidden;\n        });\n    };\n    FocusTrap.prototype.createSentinel = function () {\n        var sentinel = document.createElement('div');\n        sentinel.setAttribute('tabindex', '0');\n        // Don't announce in screen readers.\n        sentinel.setAttribute('aria-hidden', 'true');\n        sentinel.classList.add(FOCUS_SENTINEL_CLASS);\n        return sentinel;\n    };\n    return FocusTrap;\n}());\nexport { FocusTrap };\n//# sourceMappingURL=focus-trap.js.map"]},"metadata":{},"sourceType":"module"}